{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Convolutional Neural Networks: Step by Step\n",
    "\n",
    "Welcome to Course 4's first assignment! In this assignment, you will implement convolutional (CONV) and pooling (POOL) layers in numpy, including both forward propagation and (optionally) backward propagation. \n",
    "\n",
    "By the end of this notebook, you'll be able to: \n",
    "\n",
    "* Explain the convolution operation\n",
    "* Apply two different types of pooling operation\n",
    "* Identify the components used in a convolutional neural network (padding, stride, filter, ...) and their purpose\n",
    "* Build a convolutional neural network \n",
    "\n",
    "**Notation**:\n",
    "- Superscript $[l]$ denotes an object of the $l^{th}$ layer. \n",
    "    - Example: $a^{[4]}$ is the $4^{th}$ layer activation. $W^{[5]}$ and $b^{[5]}$ are the $5^{th}$ layer parameters.\n",
    "\n",
    "\n",
    "- Superscript $(i)$ denotes an object from the $i^{th}$ example. \n",
    "    - Example: $x^{(i)}$ is the $i^{th}$ training example input.\n",
    "    \n",
    "    \n",
    "- Subscript $i$ denotes the $i^{th}$ entry of a vector.\n",
    "    - Example: $a^{[l]}_i$ denotes the $i^{th}$ entry of the activations in layer $l$, assuming this is a fully connected (FC) layer.\n",
    "    \n",
    "    \n",
    "- $n_H$, $n_W$ and $n_C$ denote respectively the height, width and number of channels of a given layer. If you want to reference a specific layer $l$, you can also write $n_H^{[l]}$, $n_W^{[l]}$, $n_C^{[l]}$. \n",
    "- $n_{H_{prev}}$, $n_{W_{prev}}$ and $n_{C_{prev}}$ denote respectively the height, width and number of channels of the previous layer. If referencing a specific layer $l$, this could also be denoted $n_H^{[l-1]}$, $n_W^{[l-1]}$, $n_C^{[l-1]}$. \n",
    "\n",
    "You should be familiar with `numpy` and/or have completed the previous courses of the specialization. Let's get started!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Table of Contents\n",
    "\n",
    "- [1 - Packages](#1)\n",
    "- [2 - Outline of the Assignment](#2)\n",
    "- [3 - Convolutional Neural Networks](#3)\n",
    "    - [3.1 - Zero-Padding](#3-1)\n",
    "        - [Exercise 1 - zero_pad](#ex-1)\n",
    "    - [3.2 - Single Step of Convolution](#3-2)\n",
    "        - [Exercise 2 - conv_single_step](#ex-2)\n",
    "    - [3.3 - Convolutional Neural Networks - Forward Pass](#3-3)\n",
    "        - [Exercise 3 - conv_forward](#ex-3)\n",
    "- [4 - Pooling Layer](#4)\n",
    "    - [4.1 - Forward Pooling](#4-1)\n",
    "        - [Exercise 4 - pool_forward](#ex-4)\n",
    "- [5 - Backpropagation in Convolutional Neural Networks (OPTIONAL / UNGRADED)](#5)\n",
    "    - [5.1 - Convolutional Layer Backward Pass](#5-1)\n",
    "        - [5.1.1 - Computing dA](#5-1-1)\n",
    "        - [5.1.2 - Computing dW](#5-1-2)\n",
    "        - [5.1.3 - Computing db](#5-1-3)\n",
    "            - [Exercise 5 - conv_backward](#ex-5)\n",
    "    - [5.2 Pooling Layer - Backward Pass](#5-2)\n",
    "        - [5.2.1 Max Pooling - Backward Pass](#5-2-1)\n",
    "            - [Exercise 6 - create_mask_from_window](#ex-6)\n",
    "        - [5.2.2 - Average Pooling - Backward Pass](#5-2-2)\n",
    "            - [Exercise 7 - distribute_value](#ex-7)\n",
    "        - [5.2.3 Putting it Together: Pooling Backward](#5-2-3)\n",
    "            - [Exercise 8 - pool_backward](#ex-8)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='1'></a>\n",
    "## 1 - Packages\n",
    "\n",
    "Let's first import all the packages that you will need during this assignment. \n",
    "- [numpy](www.numpy.org) is the fundamental package for scientific computing with Python.\n",
    "- [matplotlib](http://matplotlib.org) is a library to plot graphs in Python.\n",
    "- np.random.seed(1) is used to keep all the random function calls consistent. This helps to grade your work."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import h5py\n",
    "import matplotlib.pyplot as plt\n",
    "from public_tests import *\n",
    "\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (5.0, 4.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "np.random.seed(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='2'></a>\n",
    "## 2 - Outline of the Assignment\n",
    "\n",
    "You will be implementing the building blocks of a convolutional neural network! Each function you will implement will have detailed instructions to walk you through the steps:\n",
    "\n",
    "- Convolution functions, including:\n",
    "    - Zero Padding\n",
    "    - Convolve window \n",
    "    - Convolution forward\n",
    "    - Convolution backward (optional)\n",
    "- Pooling functions, including:\n",
    "    - Pooling forward\n",
    "    - Create mask \n",
    "    - Distribute value\n",
    "    - Pooling backward (optional)\n",
    "    \n",
    "This notebook will ask you to implement these functions from scratch in `numpy`. In the next notebook, you will use the TensorFlow equivalents of these functions to build the following model:\n",
    "\n",
    "<img src=\"images/model.png\" style=\"width:800px;height:300px;\">\n",
    "\n",
    "**Note**: For every forward function, there is a corresponding backward equivalent. Hence, at every step of your forward module you will store some parameters in a cache. These parameters are used to compute gradients during backpropagation. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='3'></a>\n",
    "## 3 - Convolutional Neural Networks\n",
    "\n",
    "Although programming frameworks make convolutions easy to use, they remain one of the hardest concepts to understand in Deep Learning. A convolution layer transforms an input volume into an output volume of different size, as shown below. \n",
    "\n",
    "<img src=\"images/conv_nn.png\" style=\"width:350px;height:200px;\">\n",
    "\n",
    "In this part, you will build every step of the convolution layer. You will first implement two helper functions: one for zero padding and the other for computing the convolution function itself. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='3-1'></a>\n",
    "### 3.1 - Zero-Padding\n",
    "\n",
    "Zero-padding adds zeros around the border of an image:\n",
    "\n",
    "<img src=\"images/PAD.png\" style=\"width:600px;height:400px;\">\n",
    "<caption><center> <u> <font color='purple'> <b>Figure 1</b> </u><font color='purple'>  : <b>Zero-Padding</b><br> Image (3 channels, RGB) with a padding of 2. </center></caption>\n",
    "\n",
    "The main benefits of padding are:\n",
    "\n",
    "- It allows you to use a CONV layer without necessarily shrinking the height and width of the volumes. This is important for building deeper networks, since otherwise the height/width would shrink as you go to deeper layers. An important special case is the \"same\" convolution, in which the height/width is exactly preserved after one layer. \n",
    "\n",
    "- It helps us keep more of the information at the border of an image. Without padding, very few values at the next layer would be affected by pixels at the edges of an image.\n",
    "\n",
    "<a name='ex-1'></a>\n",
    "### Exercise 1 - zero_pad\n",
    "Implement the following function, which pads all the images of a batch of examples X with zeros. [Use np.pad](https://docs.scipy.org/doc/numpy/reference/generated/numpy.pad.html). Note if you want to pad the array \"a\" of shape $(5,5,5,5,5)$ with `pad = 1` for the 2nd dimension, `pad = 3` for the 4th dimension and `pad = 0` for the rest, you would do:\n",
    "```python\n",
    "a = np.pad(a, ((0,0), (1,1), (0,0), (3,3), (0,0)), mode='constant', constant_values = (0,0))\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "a14748505131e4100f550b8afcfb2d33",
     "grade": false,
     "grade_id": "cell-3096786c4bcad84a",
     "locked": false,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "# GRADED FUNCTION: zero_pad\n",
    "\n",
    "def zero_pad(X, pad):\n",
    "    \"\"\"\n",
    "    Pad with zeros all images of the dataset X. The padding is applied to the height and width of an image, \n",
    "    as illustrated in Figure 1.\n",
    "    \n",
    "    Argument:\n",
    "    X -- python numpy array of shape (m, n_H, n_W, n_C) representing a batch of m images\n",
    "    pad -- integer, amount of padding around each image on vertical and horizontal dimensions\n",
    "    \n",
    "    Returns:\n",
    "    X_pad -- padded image of shape (m, n_H + 2 * pad, n_W + 2 * pad, n_C)\n",
    "    \"\"\"\n",
    "    \n",
    "    #(â‰ˆ 1 line)\n",
    "    # X_pad = None\n",
    "    # YOUR CODE STARTS HERE\n",
    "    X_pad = np.pad(X, ((0,0), (pad, pad), (pad, pad), (0,0)), mode='constant', constant_values = (0,0))\n",
    "    # YOUR CODE ENDS HERE\n",
    "    \n",
    "    return X_pad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "f57532552ae25bcf8ab6b888298349dd",
     "grade": true,
     "grade_id": "cell-65f1ed75ba39bc0a",
     "locked": true,
     "points": 10,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x.shape =\n",
      " (4, 3, 3, 2)\n",
      "x_pad.shape =\n",
      " (4, 9, 9, 2)\n",
      "x[1,1] =\n",
      " [[ 0.90085595 -0.68372786]\n",
      " [-0.12289023 -0.93576943]\n",
      " [-0.26788808  0.53035547]]\n",
      "x_pad[1,1] =\n",
      " [[0. 0.]\n",
      " [0. 0.]\n",
      " [0. 0.]\n",
      " [0. 0.]\n",
      " [0. 0.]\n",
      " [0. 0.]\n",
      " [0. 0.]\n",
      " [0. 0.]\n",
      " [0. 0.]]\n",
      "[[0. 0. 0. 0. 0. 0. 0. 0. 0.]\n",
      " [0. 0. 0. 0. 0. 0. 0. 0. 0.]]\n",
      "\u001b[92m All tests passed.\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAUQAAACuCAYAAABOQnSWAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAP+klEQVR4nO3de4xc5XnH8e/PrCHxrU5Zg83NkGCQgKqwdakpFbICjmwXxf0DVaYlEFDlgqCBNlJDWglQUVNURVFMXYFSc4mLC1WBEIvYXKrG3FQDtjFXQ2voJmxsim0iX4CGTPL0j/PaGa9nveOZM+ecmf19pJXPzHnPvM8eDs/Oubzvo4jAzMxgXNkBmJlVhROimVnihGhmljghmpklTohmZokToplZ4oRoZodF0pclPVt2HJ3ghGhmljghmpklTogVIulzkj6QNJBeHydph6S5JYdmFdLKcSJpraS/k/SCpF2Svi/p1+vW/5uk99K6pyWdWbfuaEmrJO2W9ALwuU7+fmVyQqyQiHgb+BqwUtIE4B7g3ohYW2pgViltHCeXA1cBxwE14Pa6dWuAWcAxwEZgZd26fwT+D5iRtr+q/d+imuSxzNUjaRVwChDAb0fEz0oOySrocI4TSWuBdRFxY3p9BrAJ+HRE/GJY26nAT4GpwF6yZPgbEfFmWv8N4IKI+L3cf6mS+RtiNf0TcBbwD06GdgiHe5y8W7f8I2A80C/pCEm3SXpb0m5gMLXpB6YBfQ227UlOiBUjaRLwbeAu4Jb66zxm+7R4nJxYt3wS8HNgB/BHwCLgIuDXgJP3dQNsJzu9Hr5tT3JCrJ6lwIaI+BPgB8CdJcdj1dTKcXKZpDPSdce/AR5Mp8uTgZ8BO4EJwDf2bZDWP0yWdCekU+0r8v1VqsMJsUIkLQLmA1ent/4CGJD0x+VFZVXTxnHyz8C9wHvAp4CvpPdXkJ0G/wR4A1g3bLvrgElpu3vJbuL0JN9UMRsD0k2V+yJiedmxVJm/IZqZJX3tbJwu5P4r2UXYQeAPI+KnDdoNAnuAXwC1iJjdTr9mdjBJe0dYtaDQQLpYW6fMkv4e+CAibpN0I/CZiPhag3aDwOyI2NFyZ2ZmHdbuKfMi4Ltp+bvAH7T5eWZmpWk3IR4bEdsA0r/HjNAugCckbZC0pM0+zcw6YtRriJL+HZjeYNVfH0Y/50fEVknHAE9KejMinh6hvyXAEoCJEyf+1mmnnXYY3ZTjpZdeKjuEps2cObPsEEa1c+dO9uzZo073M378+DjqqKM63Y1V0IcffrgjIqYNf7/da4hvAXMjYpukGcDaiDh9lG1uAfZGxDdH+/yBgYF46qmnWo6vKFOmTCk7hKYtX179py5uvfVWBgcHO54QJ02aFGeffXanu7EKeu655zY0urnb7inzKn711PoVwPeHN5A0UdLkfcvAF4DX2uzXzCx37SbE24B5kv4bmJde75ufbXVqcyzwrKSXgReAH0TEY232a3YQSfMlvSVpS3rqweywtPUcYkTsBC5s8P5WYGFafgf4zXb6MRuNpCPI5u2bBwwBL0paFRFvlBuZdROPVLFecS6wJSLeiYhPgAfIHgsza5oTovWK4zlwzr6h9J5Z05wQrVc0uit90CMUkpZIWi9pfa1WKyAs6yZOiNYrhjhwEtMTgK3DG0XEdyJidkTM7utr6xK69SAnROsVLwKzJJ0i6UhgMdljYWZN859I6wkRUZN0HfA4cARwd0S8XnJY1mWcEK1nRMRqYPWoDc1G4FNmM7PECdHMLHFCNDNLnBDNzBInRDOzJJeEONosI8rcnta/Imkgj37NzPLUdkKsm2VkAXAGcKmkM4Y1WwDMSj9LgDva7dfMLG95fENsZpaRRcCKyKwDpqYZts3MKiOPhNjMLCOeicTMKi+PhNjMLCNNzUQCB85GsmOHyzibWXHySIjNzDLS1EwkcOBsJP39/TmEZ2bWnDwSYjOzjKwCLk93m+cAu/bVczYzq4q2J3cYaZYRSVen9XeSDbhfCGwBPgKubLdfM7O85TLbTaNZRlIi3LccwLV59GVm1ikeqWJmljghmpklTohmZokToplZ4oRoZpY4IVpPkHSipB9K2izpdUnXlx2TdR8XmbJeUQO+GhEbJU0GNkh6MiLeKDsw6x7+hmg9ISK2RcTGtLwH2IwnELHD5IRoPUfSycA5wPPlRmLdxgnReoqkScBDwA0RsbvB+v2zKdVqteIDtEpzQrSeIWk8WTJcGREPN2pTP5tSX58voduBnBCtJ0gScBewOSK+VXY81p2KKjI1V9IuSZvSz0159GtW53zgS8Dn646zhWUHZd2l7XOGuiJT88gmgn1R0qoGjzs8ExEXt9ufWSMR8SyNZ2Y3a1pRRabMzCqvqCJTAOdJelnSGkln5tCvmVmu8rjN1kwBqY3AzIjYm67rPEJWo/ngD5OWkNVu5qSTTmLy5Mk5hNhZV1xxRdkhNO2iiy4qO4RRLV26tOwQKmXNmjUtbTdlypSW+1y+fHlL291zzz0t91kFhRSZiojdEbE3La8GxktqWEGq/rGIadOm5RCemVlzCikyJWl6eiwCSeemfnfm0LeZWW6KKjJ1CXCNpBrwMbA41VkxM6uMoopMLQOW5dGXmVmneKSKmVnihGhmljghmpklTohmZokToplZ4oRoZpY4IZqZJU6IZmaJE6KZWeKiEmYV1+qMT+3MwtTqrEie7cbMrEc4IZqZJU6IZmZJXlX37pb0vqTXRlgvSbenqnyvSBrIo1+z4SQdIeklSY+WHYt1n7y+Id4LzD/E+gVkJQNmkZUHuCOnfs2Gux7YXHYQ1p1ySYgR8TTwwSGaLAJWRGYdMFXSjDz6NttH0gnA7wOtFQSxMa+oa4jNVuZD0hJJ6yWt3759eyHBWc/4NvCXwC9HalB/fNVqteIis65QVEJspjJf9qaLTFkLJF0MvB8RGw7Vrv746uvzY7h2oKIS4qiV+czadD7wRUmDwAPA5yXdV25I1m2KSoirgMvT3eY5wK6I2FZQ3zYGRMTXI+KEiDiZrPLjf0TEZSWHZV0ml3MGSfcDc4F+SUPAzcB42F9sajWwENgCfARcmUe/ZmZ5yqvq3qWjrA/g2jz6MhtNRKwF1pYchnUhj1QxM0ucEM3MEj93YFZx06dPb2m7++5r/Sb7/PmHGng2sqOPPrrlPqvA3xDNzBInRDOzxAnRzCxxQjQzS5wQzcwSJ0Qzs8QJ0cwscUI0M0ucEM3MkqKKTM2VtEvSpvRzUx79mpnlKa+he/cCy4AVh2jzTERcnFN/Zma5K6rIlJlZ5RV5DfE8SS9LWiPpzAL7NTNrSlGz3WwEZkbEXkkLgUfIajQfRNISstrNjBs3ruWZPorUzqwiRWt1FpMiDQ4Olh1CpZx66qktbXfLLbe03Ge3z1rTqkK+IUbE7ojYm5ZXA+Ml9Y/Qdn9VtHHjfBPczIpTSMaRNF2S0vK5qd+dRfRtZtasoopMXQJcI6kGfAwsTnVWzHIjaSqwHDiLrO73VRHxn+VGZd2kqCJTy8geyzHrpKXAYxFxiaQjgQllB2TdxSUErCdImgJcAHwZICI+AT4pMybrPr5rYb3is8B24B5JL0laLmli2UFZd3FCtF7RBwwAd0TEOcCHwI3DG0laImm9pPW1Wq3oGK3inBCtVwwBQxHxfHr9IFmCPED9Y119fb5iZAdyQrSeEBHvAe9KOj29dSHwRokhWRfyn0jrJX8GrEx3mN8Briw5HusyTojWMyJiEzC77Dise/mU2cwscUI0M0ucEM3MEidEM7PECdHMLGk7IUo6UdIPJW2W9Lqk6xu0kaTbJW2R9Iqkgx6YNTMrWx6P3dSAr0bERkmTgQ2SnoyI+odiF5DNkD0L+B3gjvSvmVlltP0NMSK2RcTGtLwH2AwcP6zZImBFZNYBUyXNaLdvM7M85XoNUdLJwDnA88NWHQ+8W/d6iIOTpplZqXIbqSJpEvAQcENE7B6+usEmDWfMHl5kysysKLlkHEnjyZLhyoh4uEGTIeDEutcnAFsbfZaLTJlZWfK4yyzgLmBzRHxrhGargMvT3eY5wK6I2NZu32ZmecrjlPl84EvAq5I2pff+CjgJ9heZWg0sBLYAH+FZSMysgtpOiBHxLI2vEda3CeDadvsyM+skX6QzM0ucEM3MEidEM7PECdHMLHFCNDNLnBCtZ0j68zTj0muS7pf0qbJjsu7ihGg9QdLxwFeA2RFxFnAEsLjcqKzbOCFaL+kDPi2pD5jACMNDzUbihGg9ISJ+AnwT+DGwjWx46BPlRmXdxgnReoKkz5DNu3kKcBwwUdJlDdotkbRe0vparVZ0mFZxTojWKy4C/icitkfEz4GHgd8d3qh+NqW+vtxmv7Me4YRoveLHwBxJE9IMTBeSzd5u1rSiikzNlbRL0qb0c1O7/ZrVi4jngQeBjcCrZMf2d0oNyrpOUUWmAJ6JiItz6M+soYi4Gbi57DisexVVZMrMrPKKKjIFcJ6klyWtkXRmnv2ameVB2dytOXxQVmTqKeBvh9dVkTQF+GVE7JW0EFgaEbNG+Jz9RaaA04G3cgnwV/qBHTl/ZieM5ThnRsS0nD/zIJK2Az8aYXWV9r9jaaydWBoeY7kkxFRk6lHg8UPUValvP0g2xKrwHStpfUTMLrrfw+U4y1Wl38uxNNaJWAopMiVpemqHpHNTvzvb7dvMLE9FFZm6BLhGUg34GFgceZ2rm5nlpKgiU8uAZe32lZNueTbNcZarSr+XY2ks91hyu6liZtbtPHTPzCwZMwlR0nxJb0naIunGsuMZiaS7Jb0v6bWyYzmUZoZsVt1ox4Qyt6f1r0ga6GAslRoCK2lQ0qupn/UN1heybySdXvf7bpK0W9INw9rkt18ioud/yGZPfhv4LHAk8DJwRtlxjRDrBcAA8FrZsYwS5wxgIC1PBv6rqvu01WMCWAisIbtGPgd4vsz9CcwFHi1o/wwC/YdYX9i+Gfbf7D2yZwg7sl/GyjfEc4EtEfFORHwCPEA2d17lRMTTwAdlxzGa6P4hm80cE4uAFZFZB0yVNKMTwXTh/ixs39S5EHg7IkZ6mL5tYyUhHg+8W/d6iGofbF1llCGbVdXMMVHKcVORIbABPCFpQxo9NlwZ+2YxcP8I63LZL2NlhsxGjwX59noO0pDNh4AbImJ32fEchmaOicKPm1H250ay08V9Q2AfARoOgc3B+RGxVdIxwJOS3kxnL/tDbbBNx/aNpCOBLwJfb7A6t/0yVr4hDgEn1r0+ARcgalsasvkQsDKGjV/vAs0cE4UeN6Ptz4jYHRF70/JqYLyk/k7EEhFb07/vA98ju8RQr+j/pxYAGyPif4evyHO/jJWE+CIwS9Ip6S/NYmBVyTF1tWaGbFZcM8fEKuDydEd1Dlnhqm2dCKZKQ2AlTUxzmyJpIvAFYPhTD4Xtm+RSRjhdznO/jIlT5oioSboOeJzsTtXdEfF6yWE1JOl+srtm/ZKGgJsj4q5yo2qo4ZDN9Be68kY6JiRdndbfCawmu5u6BfgIuLKDIVVpCOyxwPdSjukD/iUiHitr30iaAMwD/rTuvfpYctsvHqliZpaMlVNmM7NROSGamSVOiGZmiROimVnihGhmljghmpklTohmZokToplZ8v+mGiXG7aRGhAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 360x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "np.random.seed(1)\n",
    "x = np.random.randn(4, 3, 3, 2)\n",
    "x_pad = zero_pad(x, 3)\n",
    "print (\"x.shape =\\n\", x.shape)\n",
    "print (\"x_pad.shape =\\n\", x_pad.shape)\n",
    "print (\"x[1,1] =\\n\", x[1, 1])\n",
    "print (\"x_pad[1,1] =\\n\", x_pad[1, 1])\n",
    "\n",
    "assert type(x_pad) == np.ndarray, \"Output must be a np array\"\n",
    "assert x_pad.shape == (4, 9, 9, 2), f\"Wrong shape: {x_pad.shape} != (4, 9, 9, 2)\"\n",
    "print(x_pad[0, 0:2,:, 0])\n",
    "assert np.allclose(x_pad[0, 0:2,:, 0], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], 1e-15), \"Rows are not padded with zeros\"\n",
    "assert np.allclose(x_pad[0, :, 7:9, 1].transpose(), [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], 1e-15), \"Columns are not padded with zeros\"\n",
    "assert np.allclose(x_pad[:, 3:6, 3:6, :], x, 1e-15), \"Internal values are different\"\n",
    "\n",
    "fig, axarr = plt.subplots(1, 2)\n",
    "axarr[0].set_title('x')\n",
    "axarr[0].imshow(x[0, :, :, 0])\n",
    "axarr[1].set_title('x_pad')\n",
    "axarr[1].imshow(x_pad[0, :, :, 0])\n",
    "zero_pad_test(zero_pad)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='3-2'></a>\n",
    "### 3.2 - Single Step of Convolution \n",
    "\n",
    "In this part, implement a single step of convolution, in which you apply the filter to a single position of the input. This will be used to build a convolutional unit, which: \n",
    "\n",
    "- Takes an input volume \n",
    "- Applies a filter at every position of the input\n",
    "- Outputs another volume (usually of different size)\n",
    "\n",
    "<img src=\"images/Convolution_schematic.gif\" style=\"width:500px;height:300px;\">\n",
    "<caption><center> <u> <font color='purple'> <b>Figure 2</b> </u><font color='purple'>  : <b>Convolution operation</b><br> with a filter of 3x3 and a stride of 1 (stride = amount you move the window each time you slide) </center></caption>\n",
    "\n",
    "In a computer vision application, each value in the matrix on the left corresponds to a single pixel value. You convolve a 3x3 filter with the image by multiplying its values element-wise with the original matrix, then summing them up and adding a bias. In this first step of the exercise, you will implement a single step of convolution, corresponding to applying a filter to just one of the positions to get a single real-valued output. \n",
    "\n",
    "Later in this notebook, you'll apply this function to multiple positions of the input to implement the full convolutional operation. \n",
    "\n",
    "<a name='ex-2'></a>\n",
    "### Exercise 2 - conv_single_step\n",
    "Implement `conv_single_step()`. \n",
    "    \n",
    "[Hint](https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.sum.html)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Note**: The variable b will be passed in as a numpy array.  If you add a scalar (a float or integer) to a numpy array, the result is a numpy array.  In the special case of a numpy array containing a single value, you can cast it as a float to convert it to a scalar."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "9ef959e74c801cce52d46fb16fb0ba0d",
     "grade": false,
     "grade_id": "cell-bd1b8f799894d4e0",
     "locked": false,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "# GRADED FUNCTION: conv_single_step\n",
    "\n",
    "def conv_single_step(a_slice_prev, W, b):\n",
    "    \"\"\"\n",
    "    Apply one filter defined by parameters W on a single slice (a_slice_prev) of the output activation \n",
    "    of the previous layer.\n",
    "    \n",
    "    Arguments:\n",
    "    a_slice_prev -- slice of input data of shape (f, f, n_C_prev)\n",
    "    W -- Weight parameters contained in a window - matrix of shape (f, f, n_C_prev)\n",
    "    b -- Bias parameters contained in a window - matrix of shape (1, 1, 1)\n",
    "    \n",
    "    Returns:\n",
    "    Z -- a scalar value, the result of convolving the sliding window (W, b) on a slice x of the input data\n",
    "    \"\"\"\n",
    "#     print(a_slice_prev.shape, W.shape, b.shape)\n",
    "    Z = np.sum(np.multiply(a_slice_prev, W)) + float(b)\n",
    "    print(Z)\n",
    "\n",
    "    return Z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "794e89cc8202e83b9752d097a4c0d730",
     "grade": true,
     "grade_id": "cell-a77e63b4119ac3b9",
     "locked": true,
     "points": 10,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-6.999089450680221\n",
      "Z = -6.999089450680221\n",
      "-6.999089450680221\n",
      "-6.999089450680221\n",
      "-6.999089450680221\n",
      "\u001b[92m All tests passed.\n"
     ]
    }
   ],
   "source": [
    "np.random.seed(1)\n",
    "a_slice_prev = np.random.randn(4, 4, 3)\n",
    "W = np.random.randn(4, 4, 3)\n",
    "b = np.random.randn(1, 1, 1)\n",
    "\n",
    "Z = conv_single_step(a_slice_prev, W, b)\n",
    "print(\"Z =\", Z)\n",
    "conv_single_step_test(conv_single_step)\n",
    "\n",
    "assert (type(Z) == np.float64 or type(Z) == np.float32), \"You must cast the output to float\"\n",
    "assert np.isclose(Z, -6.999089450680221), \"Wrong value\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='3-3'></a>\n",
    "### 3.3 - Convolutional Neural Networks - Forward Pass\n",
    "\n",
    "In the forward pass, you will take many filters and convolve them on the input. Each 'convolution' gives you a 2D matrix output. You will then stack these outputs to get a 3D volume: \n",
    "\n",
    "<center>\n",
    "<video width=\"620\" height=\"440\" src=\"images/conv_kiank.mp4\" type=\"video/mp4\" controls>\n",
    "</video>\n",
    "</center>\n",
    "\n",
    "<a name='ex-3'></a>\n",
    "### Exercise 3 -  conv_forward\n",
    "Implement the function below to convolve the filters `W` on an input activation `A_prev`.  \n",
    "This function takes the following inputs:\n",
    "* `A_prev`, the activations output by the previous layer (for a batch of m inputs); \n",
    "* Weights are denoted by `W`.  The filter window size is `f` by `f`.\n",
    "* The bias vector is `b`, where each filter has its own (single) bias. \n",
    "\n",
    "You also have access to the hyperparameters dictionary, which contains the stride and the padding. \n",
    "\n",
    "**Hint**: \n",
    "1. To select a 2x2 slice at the upper left corner of a matrix \"a_prev\" (shape (5,5,3)), you would do:\n",
    "```python\n",
    "a_slice_prev = a_prev[0:2,0:2,:]\n",
    "```\n",
    "Notice how this gives a 3D slice that has height 2, width 2, and depth 3.  Depth is the number of channels.  \n",
    "This will be useful when you will define `a_slice_prev` below, using the `start/end` indexes you will define.\n",
    "\n",
    "2. To define a_slice you will need to first define its corners `vert_start`, `vert_end`, `horiz_start` and `horiz_end`. This figure may be helpful for you to find out how each of the corners can be defined using h, w, f and s in the code below.\n",
    "\n",
    "<img src=\"images/vert_horiz_kiank.png\" style=\"width:400px;height:300px;\">\n",
    "<caption><center> <u> <font color='purple'> <b>Figure 3</b> </u><font color='purple'>  : <b>Definition of a slice using vertical and horizontal start/end (with a 2x2 filter)</b> <br> This figure shows only a single channel.  </center></caption>\n",
    "\n",
    "\n",
    "**Reminder**:\n",
    "    \n",
    "The formulas relating the output shape of the convolution to the input shape are:\n",
    "    \n",
    "$$n_H = \\Bigl\\lfloor \\frac{n_{H_{prev}} - f + 2 \\times pad}{stride} \\Bigr\\rfloor +1$$\n",
    "$$n_W = \\Bigl\\lfloor \\frac{n_{W_{prev}} - f + 2 \\times pad}{stride} \\Bigr\\rfloor +1$$\n",
    "$$n_C = \\text{number of filters used in the convolution}$$\n",
    "    \n",
    "\n",
    "\n",
    "\n",
    "For this exercise, don't worry about vectorization! Just implement everything with for-loops."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Additional Hints (if you're stuck):\n",
    "\n",
    "\n",
    "* Use array slicing (e.g.`varname[0:1,:,3:5]`) for the following variables:  \n",
    "  `a_prev_pad` ,`W`, `b`  \n",
    "  - Copy the starter code of the function and run it outside of the defined function, in separate cells.  \n",
    "  - Check that the subset of each array is the size and dimension that you're expecting.  \n",
    "* To decide how to get the `vert_start`, `vert_end`, `horiz_start`, `horiz_end`, remember that these are indices of the previous layer.  \n",
    "  - Draw an example of a previous padded layer (8 x 8, for instance), and the current (output layer) (2 x 2, for instance).  \n",
    "  - The output layer's indices are denoted by `h` and `w`.  \n",
    "* Make sure that `a_slice_prev` has a height, width and depth.\n",
    "* Remember that `a_prev_pad` is a subset of `A_prev_pad`.  \n",
    "  - Think about which one should be used within the for loops."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "812d5c174c04b75b9edaf9b77ce3da72",
     "grade": false,
     "grade_id": "cell-00b35b01091c3cdc",
     "locked": false,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "# GRADED FUNCTION: conv_forward\n",
    "\n",
    "def conv_forward(A_prev, W, b, hparameters):\n",
    "    \"\"\"\n",
    "    Implements the forward propagation for a convolution function\n",
    "    \n",
    "    Arguments:\n",
    "    A_prev -- output activations of the previous layer, \n",
    "        numpy array of shape (m, n_H_prev, n_W_prev, n_C_prev)\n",
    "    W -- Weights, numpy array of shape (f, f, n_C_prev, n_C)\n",
    "    b -- Biases, numpy array of shape (1, 1, 1, n_C)\n",
    "    hparameters -- python dictionary containing \"stride\" and \"pad\"\n",
    "        \n",
    "    Returns:\n",
    "    Z -- conv output, numpy array of shape (m, n_H, n_W, n_C)\n",
    "    cache -- cache of values needed for the conv_backward() function\n",
    "    \"\"\"\n",
    "    \n",
    "    # Retrieve dimensions from A_prev's shape (â‰ˆ1 line)  \n",
    "    (m, n_H_prev, n_W_prev, n_C_prev) = A_prev.shape\n",
    "    \n",
    "    # Retrieve dimensions from W's shape (â‰ˆ1 line)\n",
    "    (f, f, n_C_prev, n_C) = W.shape\n",
    "    \n",
    "    # Retrieve information from \"hparameters\" (â‰ˆ2 lines)\n",
    "    stride = hparameters[\"stride\"]\n",
    "    pad = hparameters[\"pad\"]\n",
    "    \n",
    "    # Compute the dimensions of the CONV output volume using the formula given above. \n",
    "    # Hint: use int() to apply the 'floor' operation. (â‰ˆ2 lines)\n",
    "    n_H = int((n_H_prev + 2*pad - f)/stride) + 1 \n",
    "    n_W = int((n_W_prev + 2*pad - f)/stride) + 1 \n",
    "    \n",
    "    # Initialize the output volume Z with zeros. (â‰ˆ1 line)\n",
    "    Z = np.zeros((m, n_H,n_W, n_C)) # Intialized with height, width and filters and also the number of images need to be included\n",
    "    \n",
    "    # Create A_prev_pad by padding A_prev\n",
    "    A_prev_pad  = np.pad(A_prev, ((0,0),(pad, pad), (pad, pad), (0,0)), mode='constant', constant_values = (0,0))\n",
    "    for i in range(m):               # loop over the batch of training examples\n",
    "        a_prev_pad = A_prev_pad[i]               # Select ith training example's padded activation\n",
    "        \n",
    "        for h in range(n_H):           # loop over vertical axis of the output volume\n",
    "            # Find the vertical start and end of the current \"slice\" (â‰ˆ2 lines)\n",
    "            vert_start = stride * h\n",
    "            vert_end = vert_start+f\n",
    "            \n",
    "            for w in range(n_W):       # loop over horizontal axis of the output volume\n",
    "                # Find the horizontal start and end of the current \"slice\" (â‰ˆ2 lines)\n",
    "                horiz_start = stride * w\n",
    "                horiz_end = horiz_start+f\n",
    "                \n",
    "                for c in range(n_C):   # loop over channels (= #filters) of the output volume\n",
    "                                        \n",
    "                    # Use the corners to define the (3D) slice of a_prev_pad (See Hint above the cell). (â‰ˆ1 line)\n",
    "                    \n",
    "                    a_slice_prev = a_prev_pad[vert_start:vert_end, horiz_start:horiz_end, :]\n",
    "                    \n",
    "                    # Convolve the (3D) slice with the correct filter W and bias b, to get back one output neuron. (â‰ˆ3 line)\n",
    "                    \n",
    "                    weights = W[:, :, :, c]\n",
    "                    biases = b[:, :, :, c]\n",
    "                    Z[i, h, w, c] = conv_single_step(a_slice_prev, weights, biases)\n",
    "    # YOUR CODE STARTS HERE\n",
    "    \n",
    "    \n",
    "    # YOUR CODE ENDS HERE\n",
    "    \n",
    "    # Save information in \"cache\" for the backprop\n",
    "    cache = (A_prev, W, b, hparameters)\n",
    "    \n",
    "    return Z, cache"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "f3dea502cdd13258e8b23dbb0a19402a",
     "grade": true,
     "grade_id": "cell-429520eed87675d9",
     "locked": true,
     "points": 10,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-2.651123629553914\n",
      "-0.37849176551833935\n",
      "-1.970549285291896\n",
      "-1.9623529930298282\n",
      "-1.722598716353248\n",
      "0.4676692981762709\n",
      "-6.43434016261308\n",
      "1.1076499389829937\n",
      "4.67692928425036\n",
      "4.29865415194371\n",
      "-1.3608031011814155\n",
      "0.8053285866262244\n",
      "-2.884801080984677\n",
      "8.952800342493264\n",
      "5.3262780721274305\n",
      "-1.8263525819809767\n",
      "-2.058811740117399\n",
      "3.4085979527632695\n",
      "0.3502282023271575\n",
      "0.6830362578151936\n",
      "-1.8832806520728758\n",
      "-1.8748017401708892\n",
      "5.800872097600992\n",
      "0.0700918028905736\n",
      "-3.5014179115019592\n",
      "2.7042860046532846\n",
      "0.2834134613064215\n",
      "4.156374107489815\n",
      "-0.4657583406688838\n",
      "-0.43668823961234704\n",
      "-5.568661059450532\n",
      "1.7228803306030227\n",
      "-2.32126108132678\n",
      "0.9104060190760517\n",
      "2.3185253210052474\n",
      "0.9884227110424669\n",
      "3.3171661146423914\n",
      "4.056388322809176\n",
      "-2.481351231812353\n",
      "0.9587244252638418\n",
      "6.039789071624668\n",
      "-6.9647788754489595\n",
      "-1.207993442595811\n",
      "2.68913374363249\n",
      "-4.357440328374455\n",
      "10.593553293410995\n",
      "3.2085690089739396\n",
      "13.987359778277678\n",
      "-3.012807545120225\n",
      "-2.9022651685786105\n",
      "-8.341719357227356\n",
      "-5.262208534311856\n",
      "5.663069601801515\n",
      "1.0870403293800344\n",
      "2.204307054515114\n",
      "-10.732182937938976\n",
      "-6.241982659391952\n",
      "-0.5315883214584048\n",
      "-3.2965495361858124\n",
      "-1.818659973818035\n",
      "0.5919632249081125\n",
      "2.511347446039101\n",
      "-4.2492467251501616\n",
      "5.2193664061345935\n",
      "-2.221874123017794\n",
      "-0.952591730393061\n",
      "-5.99441272625981\n",
      "0.7914793174518812\n",
      "1.169192777685966\n",
      "-0.17321161283558162\n",
      "-3.2634629897694234\n",
      "-3.624075781391651\n",
      "-2.177960371034712\n",
      "8.071713286605444\n",
      "-0.5772703965669042\n",
      "3.362867375261555\n",
      "4.481136446806345\n",
      "-2.8919842848278328\n",
      "10.992888673283165\n",
      "3.031719320009815\n",
      "-12.499912607351698\n",
      "5.268458326945417\n",
      "-1.6764861397290391\n",
      "-8.656957620196504\n",
      "-10.681572576303106\n",
      "6.714924279914404\n",
      "2.838399710505564\n",
      "4.472597719258033\n",
      "0.11421092017748169\n",
      "-1.908724239429236\n",
      "-3.281176012839236\n",
      "0.8992246734230772\n",
      "0.8398534798185114\n",
      "-0.2512704385080684\n",
      "-0.9440971831631487\n",
      "5.172444119783126\n",
      "1.976498141249873\n",
      "2.7674307465180976\n",
      "-6.396110067027045\n",
      "2.9537817134143967\n",
      "-0.8123523899716142\n",
      "-0.5333363087701044\n",
      "0.7126887135827193\n",
      "4.91385105269536\n",
      "-5.144018685128249\n",
      "6.9704139072725795\n",
      "-4.539764690645788\n",
      "5.890926534657737\n",
      "-5.746069312918234\n",
      "2.7425655781637457\n",
      "3.021248020894531\n",
      "-10.041875916680963\n",
      "5.538711871243342\n",
      "-8.558867006158458\n",
      "-4.709621351485485\n",
      "2.559667378319676\n",
      "-2.6695950405846616\n",
      "5.60010694646555\n",
      "-8.372533419593784\n",
      "4.188482779452432\n",
      "0.6336451685592248\n",
      "-3.718482229283161\n",
      "-3.6707277223010766\n",
      "4.342264761857119\n",
      "-1.2189446454497337\n",
      "3.689294517188853\n",
      "5.8916630521687825\n",
      "0.9425645735735466\n",
      "2.360494019322484\n",
      "-3.0969620415079784\n",
      "8.335217546213611\n",
      "3.046807476934797\n",
      "3.79645420332174\n",
      "0.6648878847643189\n",
      "1.9935475976327526\n",
      "1.5439622093183625\n",
      "-7.734570481947818\n",
      "0.2875619956583188\n",
      "7.974812177568166\n",
      "3.3241599561394315\n",
      "-4.071214881150617\n",
      "2.691829629630005\n",
      "4.135610895576852\n",
      "-5.161784234926747\n",
      "-6.956351857845688\n",
      "-0.10924121038207436\n",
      "-4.125264411180336\n",
      "0.6257819886407394\n",
      "4.694920856492189\n",
      "-3.527488771253109\n",
      "3.6316827103777767\n",
      "0.6400762933536268\n",
      "7.949800142589622\n",
      "5.718556588208406\n",
      "3.499703330597773\n",
      "12.77181520232397\n",
      "8.849594783726994\n",
      "2.3715031879269777\n",
      "-1.4253164757342909\n",
      "-0.511266409391018\n",
      "-5.296582832831757\n",
      "-4.204669991725823\n",
      "-6.630677657381133\n",
      "-9.878317238998006\n",
      "-5.321303949654093\n",
      "7.324179191574341\n",
      "2.9601109065738944\n",
      "7.606694812009634\n",
      "11.546307844543865\n",
      "-1.9315724446348215\n",
      "2.26699242190139\n",
      "7.621842745514548\n",
      "5.40584347844595\n",
      "-2.8883795834102473\n",
      "-1.4698187735269894\n",
      "7.913147188421098\n",
      "5.940678769705695\n",
      "3.5073964881857695\n",
      "0.8251220227943832\n",
      "4.806554890201451\n",
      "-4.104494499685099\n",
      "4.143585406590583\n",
      "0.13194884907078794\n",
      "4.353972846494884\n",
      "4.912983635468997\n",
      "-1.4449977173929582\n",
      "5.939207802246897\n",
      "-3.926904077024095\n",
      "2.1284030896719597\n",
      "1.2723740197035336\n",
      "1.5699258064931423\n",
      "0.4427056509973153\n",
      "Z's mean =\n",
      " 0.5511276474566768\n",
      "Z[0,2,1] =\n",
      " [-2.17796037  8.07171329 -0.5772704   3.36286738  4.48113645 -2.89198428\n",
      " 10.99288867  3.03171932]\n",
      "cache_conv[0][1][2][3] =\n",
      " [-1.1191154   1.9560789  -0.3264995  -1.34267579]\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-0.8359292844668543\n",
      "0.5322950738563927\n",
      "-0.56054662100349\n",
      "0.5759161397253416\n",
      "-3.154948216160232\n",
      "-0.104166668476122\n",
      "-0.04990712302060357\n",
      "0.02011573772488423\n",
      "-0.3473914099465609\n",
      "-0.12362066979192243\n",
      "0.3611827065333555\n",
      "-0.8961090327252543\n",
      "-5.462899784531284\n",
      "0.958580449881701\n",
      "-1.5029717644851313\n",
      "3.0556115526907233\n",
      "2.5077073069329483\n",
      "2.981113702071835\n",
      "-4.350622867326802\n",
      "-2.243731751453848\n",
      "2.8407825252957917\n",
      "-1.124271757623417\n",
      "-0.7800213086229892\n",
      "4.202731787486792\n",
      "2.588685341869308\n",
      "-3.832511299819191\n",
      "9.000739522294777\n",
      "-0.311201099837242\n",
      "-1.9426495225297216\n",
      "2.990319608139909\n",
      "0.7511417553661883\n",
      "-1.5904409927574876\n",
      "-3.195187267354341\n",
      "4.626928373206092\n",
      "-11.701308844053504\n",
      "-0.4868354366324437\n",
      "-7.322069248651863\n",
      "-5.691769657869414\n",
      "0.2695300133949933\n",
      "3.0431732050835305\n",
      "-0.8108245109375931\n",
      "-6.520649614426084\n",
      "-4.666549020730088\n",
      "2.5274166959561013\n",
      "-3.7020429920586055\n",
      "1.115826174611326\n",
      "0.9918731209650196\n",
      "1.2008338656016773\n",
      "2.1160902695508508\n",
      "5.18789981666513\n",
      "0.5992111333859769\n",
      "-2.2356864472144755\n",
      "1.2524028272071852\n",
      "1.6254289402312134\n",
      "-4.16368106040133\n",
      "1.6203039636358418\n",
      "1.7621236239859914\n",
      "3.6627392373221124\n",
      "1.0954570788245197\n",
      "-1.073076933690152\n",
      "-1.5385336722624516\n",
      "-0.31471629229933556\n",
      "-0.25329392940133033\n",
      "1.9830825184717356\n",
      "-2.9739222733028337\n",
      "0.8568956392401853\n",
      "-0.49602074085910963\n",
      "1.7990819741833617\n",
      "0.8270635565107958\n",
      "0.848118803968775\n",
      "1.5104806033740108\n",
      "-3.205193230669713\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-3.9122403779726485\n",
      "0.21865222101529752\n",
      "-0.7668400149439085\n",
      "-2.2729491517161233\n",
      "1.0406732693545475\n",
      "-2.1696217971412555\n",
      "0.794208523427776\n",
      "-1.966020422400814\n",
      "-4.225888214633104\n",
      "3.9170892022789667\n",
      "-8.727828516953908\n",
      "-2.5595559461744894\n",
      "-3.930442523542526\n",
      "1.8829930005654836\n",
      "2.146305166457779\n",
      "-4.859517125095278\n",
      "-2.970511089542452\n",
      "-4.288534307757848\n",
      "4.386781887471356\n",
      "-1.3040657884614388\n",
      "3.7991874664678553\n",
      "3.2692467383760073\n",
      "-4.6371625635556555\n",
      "-1.3792205359941052\n",
      "-2.770349721881731\n",
      "-1.7326057827336974\n",
      "1.235359488507563\n",
      "-5.983588308110148\n",
      "4.66258248829983\n",
      "-0.7524382338791946\n",
      "-6.806649457875653\n",
      "4.743888229250587\n",
      "2.332399685752094\n",
      "-2.43932768186611\n",
      "-5.19626497064654\n",
      "5.3876483400797905\n",
      "2.9436678361498316\n",
      "-5.13917907067982\n",
      "9.380009330669896\n",
      "1.4402614477623064\n",
      "-1.339851291754674\n",
      "4.108635206976031\n",
      "-3.942608203847632\n",
      "1.6623419879224315\n",
      "-11.365112210285938\n",
      "-0.3278688096806302\n",
      "2.759384143017334\n",
      "3.623507623620349\n",
      "-2.844942573709452\n",
      "2.9020372495273117\n",
      "7.210167808996041\n",
      "-4.321812961700601\n",
      "-11.621149175494889\n",
      "1.905315437663954\n",
      "0.3907929789705049\n",
      "-0.15737899547781498\n",
      "-3.4474473239512085\n",
      "5.577566023683808\n",
      "-7.220305187333291\n",
      "-4.605845738689211\n",
      "-0.7453851256329681\n",
      "-2.6142876708785474\n",
      "-0.41237061195750235\n",
      "3.4545593160728805\n",
      "2.048492928501492\n",
      "-0.7915246362016916\n",
      "-0.6989302711196137\n",
      "-0.0458987485756428\n",
      "-2.149123264152579\n",
      "3.214649628594104\n",
      "-0.6974675717968761\n",
      "-0.7501884705336741\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.401017256979858\n",
      "-0.2600711715773292\n",
      "2.788838606542475\n",
      "1.4303320611512715\n",
      "1.1364105364262034\n",
      "-0.43135075461413175\n",
      "-0.6154319278234226\n",
      "0.1628193331318099\n",
      "-5.321020511248828\n",
      "4.380848568226695\n",
      "0.4118991674528447\n",
      "4.1065721500856345\n",
      "-4.177145123774046\n",
      "-1.0171742562445305\n",
      "-2.620698419951384\n",
      "-1.5496476739869944\n",
      "3.14880664541713\n",
      "4.615142812264242\n",
      "-0.021022700014267426\n",
      "-2.1874381958088565\n",
      "-20.26080966489791\n",
      "1.5784179583090148\n",
      "-0.9460238648903522\n",
      "1.7088525481975572\n",
      "-5.716302803824959\n",
      "-5.9605141360605\n",
      "-3.5318068340835858\n",
      "-6.360579786829077\n",
      "5.967707250313982\n",
      "-1.5789014905191896\n",
      "0.09770277455551002\n",
      "-0.3558277005188943\n",
      "11.956176769541774\n",
      "-1.0525450100453644\n",
      "-2.424067468010751\n",
      "6.285777069024623\n",
      "9.777469121713349\n",
      "-2.048192635620092\n",
      "-2.336911493394739\n",
      "-3.7587350515312736\n",
      "-1.983718644286564\n",
      "-10.964492621138405\n",
      "-4.318697886832281\n",
      "7.03354304221765\n",
      "-3.8402273779107707\n",
      "2.276101827245692\n",
      "-2.713261856404852\n",
      "0.8999481052447496\n",
      "-7.384354505551143\n",
      "-4.820802290671264\n",
      "2.6490073476352034\n",
      "-5.5764372553669554\n",
      "-6.112238143759098\n",
      "-3.0257904279563164\n",
      "-5.9013342143730965\n",
      "1.620860787434211\n",
      "2.0245014794653304\n",
      "5.127607993623319\n",
      "-4.337714553020604\n",
      "-0.9437418785384297\n",
      "1.8037315188324594\n",
      "-3.0116713877764623\n",
      "7.408199614754786\n",
      "-0.4162339485124739\n",
      "-6.67150806629643\n",
      "-5.461625635370526\n",
      "-4.845865827465505\n",
      "1.820373749126908\n",
      "0.6447649070130514\n",
      "0.6182849086950497\n",
      "2.714232251069337\n",
      "0.5100275826743679\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-2.5695747730907175\n",
      "-1.0759302081375028\n",
      "4.665506515606434\n",
      "-5.455593516775426\n",
      "-0.493899781291151\n",
      "0.34775235488899076\n",
      "0.44895452624166743\n",
      "3.8874318290421153\n",
      "-1.5825064106624103\n",
      "9.03644482354275\n",
      "-2.2058517177393187\n",
      "2.8119506944515815\n",
      "-0.42958388794974\n",
      "-2.6380163032017334\n",
      "5.38344772060461\n",
      "-0.4850721612876551\n",
      "-12.140945110367577\n",
      "-3.033125837017434\n",
      "-8.007394310469055\n",
      "1.189355138369633\n",
      "-4.358877270469879\n",
      "-2.1275826929496198\n",
      "3.5517975760411526\n",
      "-1.7604121960200787\n",
      "4.146867297794698\n",
      "14.12240521161817\n",
      "-5.785200919601785\n",
      "1.9744932965427053\n",
      "-15.324058124742107\n",
      "4.82804144981127\n",
      "-0.546555181055965\n",
      "3.4804660451678315\n",
      "-3.087279361714531\n",
      "4.020268289339288\n",
      "0.8580246851005693\n",
      "-0.3138310028860409\n",
      "8.089432060060481\n",
      "3.5814783705502893\n",
      "2.04651041441888\n",
      "2.3418880862807376\n",
      "12.688920393690664\n",
      "3.3349933767821396\n",
      "4.651442068586343\n",
      "2.9563051427778104\n",
      "-11.886894814250192\n",
      "4.612882312858816\n",
      "-2.2562494128500363\n",
      "-1.760385568163982\n",
      "6.470335352086483\n",
      "-4.29148989436089\n",
      "-6.386401492591827\n",
      "-1.5857610607967485\n",
      "-10.762022607296814\n",
      "-4.054356237063784\n",
      "-2.6944856071975716\n",
      "10.810597770494233\n",
      "8.433896014200338\n",
      "11.370487566125151\n",
      "-3.919217112148157\n",
      "2.6507205600813886\n",
      "1.284320097524254\n",
      "4.038601210932841\n",
      "-8.027733137118222\n",
      "-0.3607099368325744\n",
      "6.075079819278981\n",
      "-0.08594417229531326\n",
      "-4.0453904162208465\n",
      "-3.157963543143948\n",
      "-5.982574821922155\n",
      "1.410675059538465\n",
      "-2.3475722386741524\n",
      "6.75832453564312\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-2.0046481976067136\n",
      "-4.21738710066159\n",
      "-1.3357838898875474\n",
      "-5.549396964886002\n",
      "-1.6182162546478334\n",
      "2.80836281346993\n",
      "-2.8333723595536395\n",
      "1.302462233531639\n",
      "-7.669033093311955\n",
      "-1.9645096526758037\n",
      "-7.594111256239831\n",
      "0.24531691221736024\n",
      "5.440612298260433\n",
      "-4.228024627320115\n",
      "-2.1250960806264967\n",
      "-1.3885778104459332\n",
      "-0.7704371625833597\n",
      "2.7971972035462405\n",
      "-2.7893953552178568\n",
      "8.824600422870384\n",
      "-11.848812715642238\n",
      "3.2043699126747707\n",
      "2.732772323943564\n",
      "0.15154334843614042\n",
      "-12.723472507085143\n",
      "3.8113364922081336\n",
      "-7.572562574774964\n",
      "1.932855627762672\n",
      "-3.1512058885141148\n",
      "1.6286591324833508\n",
      "1.0308133668577373\n",
      "-9.61014123279436\n",
      "-0.7613745269044945\n",
      "2.80812952033881\n",
      "-3.548810107148883\n",
      "0.1344550933221284\n",
      "-8.481238549303296\n",
      "5.267977068090026\n",
      "4.2315249734413545\n",
      "-1.734052168204449\n",
      "-11.647835020344724\n",
      "0.16726127549368874\n",
      "9.067246388346929\n",
      "-8.610812543968322\n",
      "-3.2818980094769756\n",
      "2.143492485062946\n",
      "-2.036566691801241\n",
      "-1.4511069674092185\n",
      "1.5567115659518154\n",
      "8.936101954717474\n",
      "0.5125733029758768\n",
      "-6.635322549378874\n",
      "-5.1841669521843885\n",
      "1.2387887645522853\n",
      "4.375982471254973\n",
      "0.9309610419470524\n",
      "-10.416064960585663\n",
      "-11.423674087777826\n",
      "-6.610858308341501\n",
      "1.3119005732231726\n",
      "-3.04773377596441\n",
      "0.9603347881298365\n",
      "4.443054782658098\n",
      "-4.132990089693426\n",
      "0.4432338177973667\n",
      "3.477416072121142\n",
      "0.8889733271587446\n",
      "-1.8344860251743753\n",
      "4.53307155474609\n",
      "1.1549405220890834\n",
      "-0.9938268223810685\n",
      "0.10770839595614018\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-3.468072692754758\n",
      "2.465143324364965\n",
      "-8.56384721534777\n",
      "-4.130847729926303\n",
      "-2.412990781492769\n",
      "1.4129746889275463\n",
      "-0.043428398606601526\n",
      "2.16118153596857\n",
      "2.542559866950575\n",
      "5.3203162890670805\n",
      "-4.295269600214507\n",
      "6.366149568564595\n",
      "1.7552908712562971\n",
      "-1.583197460207324\n",
      "-1.9415728488222848\n",
      "-2.7290155027809018\n",
      "-2.6686553846586176\n",
      "2.164542052168744\n",
      "-8.99121449321299\n",
      "2.597748432041411\n",
      "-7.182667490017271\n",
      "4.51048716115049\n",
      "-7.774926484933155\n",
      "-3.7365127136298324\n",
      "-3.508521566165218\n",
      "8.779173789061927\n",
      "0.059869887005287614\n",
      "7.30622177910712\n",
      "-9.333559579393766\n",
      "-1.9701202019648532\n",
      "-1.1406550841534202\n",
      "-4.373654054609706\n",
      "-7.895848256763997\n",
      "4.6139994339064705\n",
      "-1.6923123699502638\n",
      "-5.864079317451787\n",
      "-13.22193594091494\n",
      "5.799419750008853\n",
      "-0.08153672104410914\n",
      "-0.16330847923932296\n",
      "-3.858110137916551\n",
      "-3.084138514904345\n",
      "-2.9522059819445525\n",
      "-6.004996459697734\n",
      "1.8949102228696006\n",
      "4.331644702152433\n",
      "-0.6260191526122156\n",
      "-8.211970211893071\n",
      "-9.010603913843877\n",
      "1.5606861826170455\n",
      "-2.695188449512459\n",
      "7.153715327501317\n",
      "3.3765683509896283\n",
      "-2.8266343337550626\n",
      "-8.786931468873206\n",
      "-2.0026983624701318\n",
      "6.10473650163581\n",
      "4.01735198681641\n",
      "1.6864531974316164\n",
      "1.503260072317877\n",
      "-10.931236285729868\n",
      "5.250936205316172\n",
      "-5.197236838002783\n",
      "4.140073593704443\n",
      "-1.5274239714824789\n",
      "2.183953447824236\n",
      "0.52735317492331\n",
      "-0.8965698038178533\n",
      "-3.083733167519987\n",
      "-2.6020601203031766\n",
      "-0.5322711438463139\n",
      "0.5502619936967503\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.3028698493497395\n",
      "-0.5509099471529056\n",
      "-0.5164270715170752\n",
      "0.432841153764252\n",
      "-2.835743881149087\n",
      "0.16673061356445334\n",
      "-1.5083960579112463\n",
      "-3.0711169379658028\n",
      "-1.6380468522962728\n",
      "0.45185514574516245\n",
      "-3.1992335540611334\n",
      "-0.5095099672471683\n",
      "-4.948060180445621\n",
      "0.9250450514582276\n",
      "-2.630091307581498\n",
      "-1.0130164880179011\n",
      "-1.7789869609708413\n",
      "-1.8903617728874593\n",
      "1.1738224775506645\n",
      "0.5182116597484494\n",
      "-4.756476174663944\n",
      "1.2372300965566965\n",
      "-0.983160132758196\n",
      "-8.172760423970999\n",
      "-2.704522267564321\n",
      "-4.432492981716677\n",
      "-2.488235221011461\n",
      "-0.6040227374785843\n",
      "-4.71572515042197\n",
      "-0.3264536058436262\n",
      "-2.9123156068094485\n",
      "-0.666968912576126\n",
      "-7.3517711104125425\n",
      "-4.998616112395169\n",
      "-1.1397127578126305\n",
      "-1.3675652983920967\n",
      "0.3839621628527534\n",
      "0.44124504849569474\n",
      "1.3497046464697822\n",
      "-8.777717355881471\n",
      "-5.736810850970979\n",
      "6.912841189034293\n",
      "-5.538310701173911\n",
      "-1.3321632993026475\n",
      "-3.717738936483574\n",
      "2.992915577102334\n",
      "-1.1927607143266665\n",
      "-1.2387932813094953\n",
      "0.7258740507461525\n",
      "0.1512354875269063\n",
      "-5.041059245426608\n",
      "0.879025276869092\n",
      "1.057821516975882\n",
      "-2.332140867054183\n",
      "-1.613971091787609\n",
      "2.7936310885252134\n",
      "-4.201211860082467\n",
      "-2.1244402927670145\n",
      "-0.11956357285799157\n",
      "0.20826324610471442\n",
      "0.5441857225505782\n",
      "1.2879766769408623\n",
      "-1.3584479699828111\n",
      "-3.2011964839543747\n",
      "-0.3731160071564865\n",
      "2.4888711235799894\n",
      "-0.8150285921119387\n",
      "-0.15718607400836299\n",
      "-1.7224894165451659\n",
      "-0.8636776587390822\n",
      "-0.9669908006970516\n",
      "2.156492513000362\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.8220027150648597\n",
      "1.4666165776797064\n",
      "-3.526928837179234\n",
      "-0.14345526684737447\n",
      "0.9656752987952606\n",
      "-0.3688263837735962\n",
      "-0.41973537265450017\n",
      "-1.3112717929035032\n",
      "-3.0485110936007374\n",
      "0.7559913618617483\n",
      "-0.775095412564125\n",
      "-0.12303428330352317\n",
      "3.1480569765751962\n",
      "-0.3681165233491979\n",
      "-0.2638042734527702\n",
      "-5.150057617714059\n",
      "-3.7987114923206864\n",
      "0.2621672200268137\n",
      "-1.4754960746217363\n",
      "-0.9000963146343068\n",
      "-0.24506221917740656\n",
      "-0.709880168865014\n",
      "0.2191667129800876\n",
      "-3.16650747677241\n",
      "-4.8593841592200535\n",
      "4.414767146616767\n",
      "-2.891127353633376\n",
      "2.291004657236097\n",
      "3.3974006489611934\n",
      "2.2025069393418746\n",
      "-0.826695695426394\n",
      "-5.587857139410161\n",
      "-1.0365446339835833\n",
      "-1.1220435655863161\n",
      "4.260020300013268\n",
      "0.23319278656818304\n",
      "-6.3679762005521665\n",
      "4.9814747843579426\n",
      "-5.528686824291331\n",
      "3.1450780597877364\n",
      "0.1902467188830015\n",
      "5.39851581010145\n",
      "9.102971137595913\n",
      "-2.947411978427768\n",
      "-0.3773018603869913\n",
      "-2.859656074732553\n",
      "-5.14933826344681\n",
      "2.3992187394075097\n",
      "0.5376616818955644\n",
      "-3.533930413614022\n",
      "-7.630317147512473\n",
      "-0.09095052872990078\n",
      "-9.647344986775975\n",
      "-10.253296917093834\n",
      "8.682656004211932\n",
      "7.282356986702337\n",
      "-0.8689637309631559\n",
      "-6.409656010192159\n",
      "-2.9382010817019912\n",
      "4.236646259635844\n",
      "-1.0124726725742028\n",
      "-3.1614157519387303\n",
      "10.225646328561108\n",
      "-0.9307765165331332\n",
      "-0.750868358529756\n",
      "0.29555703132897937\n",
      "-1.621130663818393\n",
      "2.563215801662302\n",
      "-1.489029914374374\n",
      "0.6818438727644984\n",
      "3.7811691293033602\n",
      "-1.7796445593761212\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "0.6105251559993548\n",
      "0.9730281862716639\n",
      "0.8308192372214738\n",
      "0.8362123472471117\n",
      "1.170490553571744\n",
      "-0.06498999118122134\n",
      "0.07363665187017743\n",
      "-1.0894620172598826\n",
      "-1.0999326113823993\n",
      "5.204883923429105\n",
      "2.086077064490964\n",
      "2.8745628390645\n",
      "-2.1101816707570085\n",
      "1.5845289303274355\n",
      "0.08719131314041428\n",
      "-0.07838852225612847\n",
      "0.12947321843875792\n",
      "4.844947130706364\n",
      "3.1832553134901094\n",
      "-2.1896474379571433\n",
      "-3.343722059123057\n",
      "3.882476920746087\n",
      "-2.973777893841514\n",
      "-0.19892396465345275\n",
      "-1.9132029137507236\n",
      "0.8900803392209837\n",
      "5.687272469105057\n",
      "-2.842569614007771\n",
      "0.3337134898715861\n",
      "-3.282665763822559\n",
      "-4.639632467550784\n",
      "-4.162354129184385\n",
      "3.066927028031934\n",
      "-10.63773662786459\n",
      "-4.07820173851551\n",
      "-6.628214870770326\n",
      "-20.649466410658192\n",
      "-2.2654434053620065\n",
      "0.2116311655620735\n",
      "0.5550281711294611\n",
      "-3.9488557702490867\n",
      "-3.9825870754926687\n",
      "-8.062772947431732\n",
      "-1.7431124421140274\n",
      "-4.355199355040566\n",
      "-2.0867126529719027\n",
      "-0.23268459621719761\n",
      "0.193212924050208\n",
      "7.247633674397586\n",
      "14.211554902773642\n",
      "-10.776361356199844\n",
      "2.405941003563038\n",
      "9.67107439699314\n",
      "6.609292634182587\n",
      "2.1643746921705573\n",
      "0.8949351218982331\n",
      "0.836490101081443\n",
      "4.284855877588817\n",
      "-5.299624108611154\n",
      "-0.006700198356909437\n",
      "-2.0063064221910842\n",
      "8.667423429982465\n",
      "-3.9101954194473816\n",
      "1.2894301714419945\n",
      "-2.3217088653130613\n",
      "5.847121344536337\n",
      "1.418302933394756\n",
      "-1.7646047260930093\n",
      "4.0531194583921275\n",
      "6.1947864969147215\n",
      "-6.124095046758231\n",
      "-4.346258961642003\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-0.02339240273427534\n",
      "-0.5095745243758038\n",
      "-0.8105860217454987\n",
      "-1.2430044887296914\n",
      "0.9641334544182925\n",
      "0.6346352497988912\n",
      "-0.6999961160987854\n",
      "0.7315680554358879\n",
      "-1.9425157550992929\n",
      "-5.861870857313203\n",
      "2.379902605248871\n",
      "-6.327314097794075\n",
      "12.367009067093749\n",
      "1.0158337733850282\n",
      "-2.3568817284444417\n",
      "-1.8501864250228701\n",
      "-1.644841041744736\n",
      "-6.564358523975976\n",
      "-0.5107327671613566\n",
      "-4.2845429890946525\n",
      "2.030660748685449\n",
      "-5.245908581017507\n",
      "2.2218006241920443\n",
      "-0.39272880534121085\n",
      "-7.970777417681581\n",
      "-10.90037279842498\n",
      "2.456785369983362\n",
      "2.3714810317224004\n",
      "2.1147398241234745\n",
      "-7.763696041983447\n",
      "5.190369766288115\n",
      "4.369036150736332\n",
      "-4.158472674928435\n",
      "-0.6619096040650633\n",
      "-3.7212660545119096\n",
      "-4.910108658220079\n",
      "-6.627445902460136\n",
      "-4.771215874146255\n",
      "2.4918662758393877\n",
      "5.56097188949396\n",
      "1.5946168002884222\n",
      "-8.583288600636589\n",
      "-9.62696676745702\n",
      "-4.739581543549537\n",
      "-11.557469863055818\n",
      "1.1816501830303798\n",
      "-0.13689251662485247\n",
      "2.137754263660892\n",
      "-3.079272394797546\n",
      "4.942184730565062\n",
      "2.77224660655839\n",
      "7.244881528857191\n",
      "-2.5891867544226095\n",
      "8.19389979329558\n",
      "-2.790392770188107\n",
      "-10.458452959749044\n",
      "-6.768752601864629\n",
      "-5.5553298876613555\n",
      "-5.92119648891862\n",
      "-4.421541242133746\n",
      "-2.8964009200536927\n",
      "1.4844033791607547\n",
      "-0.07174776972234531\n",
      "-2.917694194391706\n",
      "-6.788003129163538\n",
      "-7.810218451170905\n",
      "-0.29745404371959916\n",
      "-1.786022070694464\n",
      "-4.792675566483521\n",
      "-1.9368076366785965\n",
      "0.19869672324873844\n",
      "-4.792274928077766\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "0.09147988493534154\n",
      "0.3261622084811088\n",
      "-1.7161359407911678\n",
      "-1.0166419987810411\n",
      "-1.8075111853440853\n",
      "-0.9666340351860381\n",
      "-1.1129588676000548\n",
      "3.1695886332983916\n",
      "4.875189206387249\n",
      "-2.7567186604129597\n",
      "3.8276330642327956\n",
      "0.23025923503465623\n",
      "4.937697611735549\n",
      "-2.176971762691849\n",
      "1.5461771150797743\n",
      "3.4282058211938375\n",
      "1.2839012602683602\n",
      "-3.444271133474637\n",
      "-9.425587772069957\n",
      "0.002511787033876056\n",
      "0.1972865518599758\n",
      "-4.2283716397115105\n",
      "0.4456746175544434\n",
      "10.094394869612833\n",
      "9.902238867080642\n",
      "-1.0483367935640353\n",
      "-3.23949643935609\n",
      "-5.016980361839488\n",
      "6.754311716940445\n",
      "1.7279694173639673\n",
      "-1.7098626615918433\n",
      "4.378036241398768\n",
      "-2.904765369747877\n",
      "4.240164026765166\n",
      "-5.271732737067337\n",
      "9.897200614504088\n",
      "-2.105599186918397\n",
      "3.240180938793217\n",
      "0.5888964220085848\n",
      "-4.57929301104863\n",
      "1.9668327756099029\n",
      "9.15847366150436\n",
      "-6.779074714833258\n",
      "-0.4262811594546387\n",
      "6.493265208086873\n",
      "3.381705809630472\n",
      "-10.079987159170194\n",
      "4.130671760587319\n",
      "0.14214777197118367\n",
      "-5.157302686545794\n",
      "-4.814156999213727\n",
      "-1.4010730286916586\n",
      "3.188942751824176\n",
      "-0.6197521823783751\n",
      "-7.068040331432766\n",
      "0.20915488991648606\n",
      "2.7440488293260543\n",
      "1.7114390768423755\n",
      "-4.535721710844522\n",
      "3.806806452621344\n",
      "-0.31230029611071575\n",
      "-2.725144767476772\n",
      "1.9070215160717527\n",
      "1.2233338047357936\n",
      "-2.8757774425565836\n",
      "2.875245951367137\n",
      "-1.4141625200590369\n",
      "0.00999509031623863\n",
      "4.285561411075046\n",
      "-1.1015552845980037\n",
      "-3.5489125730087983\n",
      "5.275397161837444\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "0.8724646806467569\n",
      "1.3016468018669503\n",
      "-0.9745017552823304\n",
      "-0.05893295236240659\n",
      "-5.465929951940747\n",
      "-0.15847839137294067\n",
      "1.0019765575981034\n",
      "-0.7808061722622333\n",
      "-6.862091676624404\n",
      "9.156088911930718\n",
      "-1.8096904263401234\n",
      "-2.663703046511235\n",
      "-8.368733606504877\n",
      "1.1539830045550528\n",
      "3.333822434633665\n",
      "5.601343157496657\n",
      "9.082019492280608\n",
      "11.362607528525732\n",
      "-7.65522897486516\n",
      "-1.9279770971777725\n",
      "4.640481269965922\n",
      "5.929965494613178\n",
      "2.6527883692440746\n",
      "-1.4642721918457335\n",
      "-2.539880573887931\n",
      "0.24638089465931046\n",
      "-1.4109191075824172\n",
      "1.8197733542652412\n",
      "5.031414890947141\n",
      "1.6083692960600147\n",
      "-9.507619421019353\n",
      "2.0427285443355747\n",
      "1.3410011326145426\n",
      "-0.4136029827357226\n",
      "-5.138653776126578\n",
      "0.697646447315782\n",
      "-10.963388941010347\n",
      "0.6404319217506704\n",
      "-15.2499599967128\n",
      "-6.496711497046676\n",
      "1.4661283480610552\n",
      "-3.7444037071067884\n",
      "-5.9699983065225375\n",
      "2.453149462662156\n",
      "-6.471047836394979\n",
      "-8.669690729592723\n",
      "5.695801457185226\n",
      "-0.9633692722838891\n",
      "-2.9974791571115738\n",
      "-0.6279442600017745\n",
      "1.072343061042002\n",
      "4.066194944017902\n",
      "-1.0235729335864534\n",
      "0.5204632486742373\n",
      "5.691335671848775\n",
      "1.0956417259542868\n",
      "4.273925531383296\n",
      "-0.5640210978719616\n",
      "-2.3354461764699628\n",
      "-3.1483224657716242\n",
      "-4.835739266757691\n",
      "4.806440029542711\n",
      "-4.011823525627878\n",
      "-0.2638771065893713\n",
      "3.422549097459699\n",
      "7.843020833105856\n",
      "5.067214932980172\n",
      "-2.6677790581757233\n",
      "-0.1426287870397267\n",
      "-0.23335835334525895\n",
      "-6.4119138873422585\n",
      "0.4109609108446623\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-2.908262798148986\n",
      "-2.022004453857136\n",
      "0.5908849937596945\n",
      "0.17886624213105778\n",
      "-4.115020555168149\n",
      "-0.4026005988022298\n",
      "-2.10216112725367\n",
      "-4.17950252956582\n",
      "-4.265780342545197\n",
      "-2.4639464907273645\n",
      "-5.023409126510441\n",
      "-0.14432454667890854\n",
      "-6.040365584359874\n",
      "-1.6839394777119614\n",
      "-2.660951582643106\n",
      "-0.19270314251156556\n",
      "-6.878301760599409\n",
      "2.3935925040336583\n",
      "4.894098357076909\n",
      "1.7660437638140847\n",
      "-7.249082767505474\n",
      "2.363667340360033\n",
      "0.817233918775153\n",
      "-10.329904732397017\n",
      "3.137318241734559\n",
      "-1.191609035154293\n",
      "-2.243533077128834\n",
      "-7.107888116048637\n",
      "-0.1283779959961786\n",
      "0.24919041999249936\n",
      "0.5880146616039352\n",
      "6.960296837380469\n",
      "-1.9203994330546932\n",
      "-6.093584967056908\n",
      "3.446018739614189\n",
      "5.3333596730160915\n",
      "-0.9620552085086402\n",
      "-4.422941499649305\n",
      "1.712411921555013\n",
      "-7.556188543947365\n",
      "11.732480186129226\n",
      "9.096828050643088\n",
      "1.5467890366965216\n",
      "5.184337242827564\n",
      "-8.040621089717993\n",
      "-0.7006350906581857\n",
      "-2.013496988805259\n",
      "0.7547890498754384\n",
      "-1.785904009159097\n",
      "3.6326835592107023\n",
      "-0.1457372182200507\n",
      "-3.818095531712913\n",
      "-8.845035695365345\n",
      "-2.2212915975979755\n",
      "-0.02365278872484916\n",
      "3.537985170051975\n",
      "0.7124418940605943\n",
      "3.2221337666411975\n",
      "3.3761246939357665\n",
      "-5.473084635213496\n",
      "-5.150120767778756\n",
      "1.0757396654177813\n",
      "7.000085920582081\n",
      "-5.355316918974014\n",
      "-7.331104299506353\n",
      "0.38297296114201795\n",
      "-0.8473799094492979\n",
      "-1.5919167953038815\n",
      "-0.35717279370695776\n",
      "-4.738071978091553\n",
      "0.03133112036921515\n",
      "1.73721897578012\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.3255481901742008\n",
      "0.1833939916667442\n",
      "-2.0313604737558926\n",
      "-0.6752476934987954\n",
      "0.570412924212828\n",
      "-0.7755455671587824\n",
      "-0.25990494257644814\n",
      "0.8792896541270936\n",
      "-1.2462113579729606\n",
      "0.05690034806219868\n",
      "-0.8685139870384745\n",
      "1.4948814728825113\n",
      "0.535162070226683\n",
      "-1.1383029012608832\n",
      "-1.1545215539971694\n",
      "-1.6478544478729127\n",
      "-1.4457401612106797\n",
      "1.4077129454117925\n",
      "-0.814689730421952\n",
      "0.6094973262386447\n",
      "-0.2846610708020284\n",
      "-0.977688932353998\n",
      "-1.409302946808078\n",
      "1.470752448314309\n",
      "-0.17929034393097476\n",
      "2.844818557837336\n",
      "4.514948755281152\n",
      "-0.1447492918079719\n",
      "-2.796788794564786\n",
      "0.8267226346110887\n",
      "0.45065667129489095\n",
      "-1.3311566359202804\n",
      "1.1738798664603756\n",
      "-2.623144266321196\n",
      "3.9930939942779107\n",
      "-0.6520356438772499\n",
      "-8.822675704641735\n",
      "0.6062620957764584\n",
      "-2.624890909345026\n",
      "-0.7628871318811117\n",
      "0.22487313251628005\n",
      "-2.673943104806638\n",
      "1.0230283794934938\n",
      "-4.425475607908991\n",
      "-5.3967923434512945\n",
      "1.580537689100965\n",
      "2.107972146179275\n",
      "-3.963836538262022\n",
      "-2.605686633877604\n",
      "-7.488198509881815\n",
      "2.4249643958670237\n",
      "-1.895052362826724\n",
      "3.9211481103884935\n",
      "-1.9824442030091511\n",
      "4.329765243924467\n",
      "-5.678408207992217\n",
      "-4.820855055199231\n",
      "-0.8257306559923635\n",
      "2.765307946688809\n",
      "-0.583291268514414\n",
      "0.8975096714950876\n",
      "0.3633180249450291\n",
      "1.3671631218398865\n",
      "-3.702849273529333\n",
      "0.06534303271271802\n",
      "3.6696908439152485\n",
      "-0.46422541203704093\n",
      "-0.07130716067419707\n",
      "-1.7882991254115586\n",
      "-1.3965045957192312\n",
      "-0.35328110672513735\n",
      "2.466904013689951\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "-1.2238796505752447\n",
      "0.5582642185676373\n",
      "-0.982160958028669\n",
      "-0.44730816175337745\n",
      "-0.8281475891882739\n",
      "-0.11072841404109841\n",
      "-0.4293859732130132\n",
      "-0.47458986707940803\n",
      "3.14880664541713\n",
      "4.615142812264242\n",
      "-0.021022700014267426\n",
      "-2.1874381958088565\n",
      "-20.26080966489791\n",
      "1.5784179583090148\n",
      "-0.9460238648903522\n",
      "1.7088525481975572\n",
      "11.956176769541774\n",
      "-1.0525450100453644\n",
      "-2.424067468010751\n",
      "6.285777069024623\n",
      "9.777469121713349\n",
      "-2.048192635620092\n",
      "-2.336911493394739\n",
      "-3.7587350515312736\n",
      "-7.384354505551143\n",
      "-4.820802290671264\n",
      "2.6490073476352034\n",
      "-5.5764372553669554\n",
      "-6.112238143759098\n",
      "-3.0257904279563164\n",
      "-5.9013342143730965\n",
      "1.620860787434211\n",
      "-0.7704371625833597\n",
      "2.7971972035462405\n",
      "-2.7893953552178568\n",
      "8.824600422870384\n",
      "-11.848812715642238\n",
      "3.2043699126747707\n",
      "2.732772323943564\n",
      "0.15154334843614042\n",
      "-0.7613745269044945\n",
      "2.80812952033881\n",
      "-3.548810107148883\n",
      "0.1344550933221284\n",
      "-8.481238549303296\n",
      "5.267977068090026\n",
      "4.2315249734413545\n",
      "-1.734052168204449\n",
      "1.5567115659518154\n",
      "8.936101954717474\n",
      "0.5125733029758768\n",
      "-6.635322549378874\n",
      "-5.1841669521843885\n",
      "1.2387887645522853\n",
      "4.375982471254973\n",
      "0.9309610419470524\n",
      "-1.644841041744736\n",
      "-6.564358523975976\n",
      "-0.5107327671613566\n",
      "-4.2845429890946525\n",
      "2.030660748685449\n",
      "-5.245908581017507\n",
      "2.2218006241920443\n",
      "-0.39272880534121085\n",
      "-4.158472674928435\n",
      "-0.6619096040650633\n",
      "-3.7212660545119096\n",
      "-4.910108658220079\n",
      "-6.627445902460136\n",
      "-4.771215874146255\n",
      "2.4918662758393877\n",
      "5.56097188949396\n",
      "-3.079272394797546\n",
      "4.942184730565062\n",
      "2.77224660655839\n",
      "7.244881528857191\n",
      "-2.5891867544226095\n",
      "8.19389979329558\n",
      "-2.790392770188107\n",
      "-10.458452959749044\n",
      "9.082019492280608\n",
      "11.362607528525732\n",
      "-7.65522897486516\n",
      "-1.9279770971777725\n",
      "4.640481269965922\n",
      "5.929965494613178\n",
      "2.6527883692440746\n",
      "-1.4642721918457335\n",
      "1.3410011326145426\n",
      "-0.4136029827357226\n",
      "-5.138653776126578\n",
      "0.697646447315782\n",
      "-10.963388941010347\n",
      "0.6404319217506704\n",
      "-15.2499599967128\n",
      "-6.496711497046676\n",
      "-2.9974791571115738\n",
      "-0.6279442600017745\n",
      "1.072343061042002\n",
      "4.066194944017902\n",
      "-1.0235729335864534\n",
      "0.5204632486742373\n",
      "5.691335671848775\n",
      "1.0956417259542868\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.22612163756791415\n",
      "0.6545698498020168\n",
      "-0.455383430187408\n",
      "-0.6516472949350316\n",
      "2.825500513772998\n",
      "-2.053971076810005\n",
      "2.871033788920399\n",
      "-1.3282004254835849\n",
      "0.146453210091411\n",
      "2.6669916185617564\n",
      "-2.3702493796768147\n",
      "-1.8728235379859046\n",
      "-0.9065304206324168\n",
      "0.9998345357760301\n",
      "3.6994312703174743\n",
      "-2.3654999705438167\n",
      "0.5174800692086076\n",
      "0.649025837338025\n",
      "-1.7633746374098864\n",
      "-1.6554183435503005\n",
      "3.2589056020221627\n",
      "-1.6804802525814226\n",
      "-2.4012087217126523\n",
      "2.386086716365751\n",
      "2.0115491014919646\n",
      "5.074867097255142\n",
      "-2.047383443119691\n",
      "-4.544660853179633\n",
      "-3.581969837542482\n",
      "-5.8050767325103605\n",
      "5.872463814536978\n",
      "-3.2155657444368417\n",
      "1.663865905129335\n",
      "0.34113568651960324\n",
      "-1.5212397922323933\n",
      "2.275842584250422\n",
      "2.4462068025338985\n",
      "3.6174096611125277\n",
      "0.3094606177917026\n",
      "2.1506013946969844\n",
      "-3.7708601680747598\n",
      "5.458548051126023\n",
      "2.7918087411968173\n",
      "3.2270626075013364\n",
      "11.838659375247728\n",
      "0.3187931609521275\n",
      "5.459216840038849\n",
      "1.1597872145548147\n",
      "7.905232170017622\n",
      "-4.989757157883455\n",
      "-3.91655541028185\n",
      "-3.4097128155014245\n",
      "-2.638250215380267\n",
      "4.459968547170459\n",
      "-3.833776548516283\n",
      "-4.510554588969926\n",
      "2.590832519143407\n",
      "-5.178465128423733\n",
      "-0.7401095418345656\n",
      "3.8541496418778385\n",
      "3.1288056193366214\n",
      "-7.407631156269927\n",
      "7.5076617328953965\n",
      "-1.5405562652706617\n",
      "-6.682044830752488\n",
      "0.4951966041041779\n",
      "1.3911718588988011\n",
      "-1.2253176294070132\n",
      "1.8582634604773975\n",
      "-3.553287031227684\n",
      "-4.436956313934954\n",
      "5.091317085973213\n",
      "-1.2514064178304158\n",
      "5.628676212228464\n",
      "0.8496984153777951\n",
      "-1.0671929223266052\n",
      "2.8644336034749838\n",
      "-1.0328006864628\n",
      "-1.104952833307072\n",
      "4.663498291395664\n",
      "-3.1469951606968567\n",
      "1.0065695962222332\n",
      "-2.545527320395772\n",
      "-3.9435195401370278\n",
      "-0.4507751153106293\n",
      "-3.2622962239883657\n",
      "-0.18214268826088492\n",
      "-0.5516451280047263\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "0.7411186956730488\n",
      "-1.0560318747933168\n",
      "-2.952410272761492\n",
      "-1.6360267119276104\n",
      "1.092460273423688\n",
      "-1.0956420596665755\n",
      "-2.80517039887616\n",
      "0.6901294692397499\n",
      "1.5880802515698895\n",
      "-0.19399867362597611\n",
      "1.7702201936876307\n",
      "-0.5594095396217994\n",
      "0.030202796116096775\n",
      "-1.5843908020258737\n",
      "-2.37577381639615\n",
      "0.0801545543569237\n",
      "0.44032004959767346\n",
      "3.7778504517386784\n",
      "-1.1747089124615129\n",
      "-0.7242792318839181\n",
      "-5.662381622765015\n",
      "-1.2541008229277626\n",
      "4.360260452055792\n",
      "-5.21715687033062\n",
      "4.219291936157767\n",
      "1.1345899433811426\n",
      "0.7861724212169663\n",
      "2.855874708708109\n",
      "6.401533411935965\n",
      "-1.0554306214821112\n",
      "-8.242867294254712\n",
      "-1.480035995955152\n",
      "1.1700566787469753\n",
      "4.383502559873621\n",
      "-3.6460786020789833\n",
      "3.5829325649702195\n",
      "2.2748788986350483\n",
      "-16.3825096732253\n",
      "7.830284140612162\n",
      "-6.17957742211641\n",
      "-6.408569860958272\n",
      "10.06244785343301\n",
      "-2.4664303637985743\n",
      "-3.721825506380151\n",
      "2.239547928677227\n",
      "-2.210070701170624\n",
      "-4.956411610703393\n",
      "-6.1991743114626745\n",
      "-2.147056674625109\n",
      "13.357696646458367\n",
      "-12.331339510474123\n",
      "-12.87355132540433\n",
      "-14.591929800814663\n",
      "14.060997510847576\n",
      "12.104492643446676\n",
      "-3.116935680368541\n",
      "6.18896379132556\n",
      "-7.955233600122071\n",
      "2.6592058761669097\n",
      "0.928183723832458\n",
      "-1.460492727164897\n",
      "15.023581176347863\n",
      "-6.06837247951665\n",
      "3.8511066578964113\n",
      "8.52852556364866\n",
      "2.5567603277816775\n",
      "7.500769576926788\n",
      "0.8398905223698387\n",
      "12.924799064970273\n",
      "-6.784594463220554\n",
      "7.175594658955507\n",
      "2.7408643070955807\n",
      "1.9078975154606348\n",
      "4.468586280341335\n",
      "-2.9300661834162223\n",
      "-5.7351219151152515\n",
      "1.114911978608529\n",
      "-3.6916141677414847\n",
      "1.5198088902463476\n",
      "-1.3600742530479188\n",
      "2.006143682617758\n",
      "-3.415841592841561\n",
      "-0.7930062355888343\n",
      "4.10090726667511\n",
      "4.9095990944334895\n",
      "-2.9926925056258673\n",
      "2.1560024205385506\n",
      "-0.39318427680771323\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "0.7488198077760612\n",
      "2.924296064615252\n",
      "-1.2653617494866474\n",
      "-3.1845788321418644\n",
      "4.356088699061649\n",
      "-3.9448675440889955\n",
      "5.151474039780158\n",
      "0.14633297530021394\n",
      "-2.001751261041281\n",
      "2.6146805205896375\n",
      "-6.280528588564002\n",
      "-5.478444761683097\n",
      "-0.5289518323786949\n",
      "1.982162661151468\n",
      "7.215440338149444\n",
      "2.09418775606544\n",
      "-5.308253856172536\n",
      "0.6102519848377689\n",
      "1.9166445478435044\n",
      "-7.223266555751851\n",
      "-2.5535463179307984\n",
      "2.1937177670484402\n",
      "-0.43215973038083616\n",
      "-7.409470149521434\n",
      "11.86700360618502\n",
      "-4.487716509104932\n",
      "7.28967269311971\n",
      "-5.538419099136958\n",
      "-8.035894991104257\n",
      "1.8381279797732937\n",
      "-7.771544973603009\n",
      "9.234221510974729\n",
      "4.409903613413218\n",
      "8.869918246390622\n",
      "3.8533231830928587\n",
      "11.843665880628391\n",
      "16.986001620602345\n",
      "-5.488345028353743\n",
      "0.7674614690749463\n",
      "0.08664174758607651\n",
      "-7.516274449162637\n",
      "9.132528328859422\n",
      "-10.272218154689558\n",
      "-2.582348360409403\n",
      "14.430111635618799\n",
      "-15.668288613890498\n",
      "12.738440111097134\n",
      "-4.4622892646452605\n",
      "-1.4915184874127778\n",
      "-0.5188551243340932\n",
      "-4.235008574207744\n",
      "5.164636676156698\n",
      "13.112028170744134\n",
      "-4.9799712850828435\n",
      "-2.2617652143542757\n",
      "-9.7214246909723\n",
      "0.42761154098039744\n",
      "12.218316660915665\n",
      "-3.780346041095667\n",
      "-1.1210777736724185\n",
      "-15.309804138900859\n",
      "-5.952124456654721\n",
      "-3.9462711243832045\n",
      "-3.1379148821970024\n",
      "-8.399800759350226\n",
      "-1.5051571208024725\n",
      "3.6743817074494496\n",
      "-0.5410635855224066\n",
      "-4.671663324607756\n",
      "-7.94537331288386\n",
      "-8.45599211387213\n",
      "5.168638041627416\n",
      "-0.9401485738776835\n",
      "10.679043970678476\n",
      "-4.9419075325309905\n",
      "-5.347257505828413\n",
      "9.341523146445146\n",
      "2.289287418019894\n",
      "2.647688281850862\n",
      "3.745025324609965\n",
      "-0.45797996099159965\n",
      "2.657287381613719\n",
      "-0.3789325927433451\n",
      "-1.2676209641761267\n",
      "0.072137167280798\n",
      "0.3146529548641501\n",
      "-0.5237772271267335\n",
      "-1.1756751020494731\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "1.0548957024846497\n",
      "2.8708845291345373\n",
      "-1.593806068924718\n",
      "-2.688992314102798\n",
      "-1.1887219701705765\n",
      "-4.430706032187134\n",
      "0.592635055197135\n",
      "-0.9893640490760225\n",
      "-1.9780024062127786\n",
      "7.3418172638892445\n",
      "-2.0429238231824365\n",
      "-1.5848658577270676\n",
      "-3.6612332252337336\n",
      "2.186218047589361\n",
      "5.793692701325421\n",
      "-0.798821251705518\n",
      "6.859246196183648\n",
      "6.818716121397994\n",
      "-7.219230097341578\n",
      "-12.630714144251794\n",
      "-9.616497805658941\n",
      "12.720632012431288\n",
      "4.809854558103755\n",
      "4.503107243137203\n",
      "8.976882456301093\n",
      "8.029683068587374\n",
      "-0.8749118301853676\n",
      "-2.845245159222995\n",
      "-2.7179358436524486\n",
      "3.525406927437289\n",
      "-0.0628336205615647\n",
      "-2.2281519922385997\n",
      "0.6504273034588178\n",
      "-21.246601908425927\n",
      "1.4414309193412025\n",
      "-5.865944837865212\n",
      "-3.0148044563802077\n",
      "-9.946240122288767\n",
      "-5.838183586541787\n",
      "4.947782579870871\n",
      "7.330915386693948\n",
      "9.878310343667785\n",
      "7.461857130806892\n",
      "3.657089637419812\n",
      "16.40477377960275\n",
      "7.939285424549757\n",
      "8.883750663567684\n",
      "-6.4447553503432635\n",
      "3.6805790555897047\n",
      "18.12417544418925\n",
      "-8.176394065013135\n",
      "-8.865513840889696\n",
      "22.380134281980514\n",
      "7.2457117050354665\n",
      "12.961035572720165\n",
      "6.054579321008759\n",
      "-0.5641310062523627\n",
      "12.397596873961078\n",
      "-4.673540508768009\n",
      "2.763476136369084\n",
      "-1.095246382783385\n",
      "5.501211805780574\n",
      "13.145026503796908\n",
      "1.2428483685522993\n",
      "1.9636332810216435\n",
      "1.2691302292040207\n",
      "-1.6350427317410634\n",
      "7.095826171955997\n",
      "3.5699097024148645\n",
      "-2.2449352187640805\n",
      "9.445926580369782\n",
      "3.806606443820447\n",
      "-4.112975971584238\n",
      "4.21080408866315\n",
      "-3.4990095330125293\n",
      "4.289081000558106\n",
      "3.947734649425568\n",
      "-1.4249696772773717\n",
      "0.7671685814125387\n",
      "1.8696556856232192\n",
      "2.1077504199325605\n",
      "7.607932315484347\n",
      "-0.22901088885352316\n",
      "0.245062851839162\n",
      "7.966584255264288\n",
      "2.4065165975603895\n",
      "-1.4967308296063262\n",
      "-3.50759828590788\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "1.5284524578441205\n",
      "2.5636526134063526\n",
      "0.48553780790035495\n",
      "-1.963404229650794\n",
      "-3.171460828862671\n",
      "-5.217688592682871\n",
      "-0.6279896785302505\n",
      "-1.7705599777417178\n",
      "-2.452303475079919\n",
      "-0.8353127210716854\n",
      "1.9166736450920159\n",
      "5.719032018517832\n",
      "0.7752092728292796\n",
      "-12.162051712120196\n",
      "-1.246488538212458\n",
      "7.572660460263647\n",
      "0.07587599745924856\n",
      "19.54657105596989\n",
      "3.4556282029636787\n",
      "-2.891621266115339\n",
      "11.941050913952266\n",
      "-5.3464751194914655\n",
      "18.600415963738534\n",
      "-2.8571957524552776\n",
      "1.1805034154688077\n",
      "-9.315780161882449\n",
      "-20.029910122684498\n",
      "-2.6370361492905445\n",
      "-12.388393679332049\n",
      "-2.311513935752554\n",
      "-11.166232543410995\n",
      "-5.270750874445559\n",
      "11.162630383285618\n",
      "2.091152118126451\n",
      "0.6612708473865865\n",
      "6.802076976973986\n",
      "-3.5113867083904773\n",
      "-7.740724390659362\n",
      "-14.908058945629802\n",
      "-7.892143149392387\n",
      "-0.9945629327468746\n",
      "-3.085644061171195\n",
      "-6.694668928235544\n",
      "-26.37286514867169\n",
      "-18.516534508347913\n",
      "-1.9282015321687056\n",
      "-4.444300961943036\n",
      "8.996798096187609\n",
      "16.709110381724688\n",
      "9.965431119526883\n",
      "2.601740420183213\n",
      "1.5315002533748177\n",
      "24.054620712590157\n",
      "17.41019188269292\n",
      "5.929883599749723\n",
      "12.342704802100595\n",
      "12.261836954246307\n",
      "2.200574608231923\n",
      "14.865715540539316\n",
      "1.5523515549338993\n",
      "7.202809576319629\n",
      "-6.650485324228265\n",
      "-10.632058347293983\n",
      "1.7503290658549504\n",
      "0.049300711633331495\n",
      "10.874837347833061\n",
      "-13.519250199405306\n",
      "-7.50060497547786\n",
      "-0.24774306077256758\n",
      "-7.470089503075621\n",
      "-1.971126921107608\n",
      "-5.04630649944223\n",
      "5.580329846209433\n",
      "-5.323824077065137\n",
      "0.6296345707822442\n",
      "3.7460781212346124\n",
      "6.974530180421088\n",
      "-5.623337330642248\n",
      "13.245600356085207\n",
      "-14.091756471451058\n",
      "-0.8051342295905354\n",
      "8.369737827739273\n",
      "-0.4658255856510294\n",
      "-1.4674372227200911\n",
      "-3.0419937389973826\n",
      "1.3425282633315772\n",
      "-2.0960966678149715\n",
      "-3.666467226202073\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "0.502270913189406\n",
      "0.9931629871261362\n",
      "2.9714438479744443\n",
      "-0.24161434212254007\n",
      "3.722897289682796\n",
      "-1.341586632879636\n",
      "0.34880776833118393\n",
      "7.724108290941768\n",
      "-1.682456029047675\n",
      "10.358627661221634\n",
      "0.28607290638524163\n",
      "-0.47172601412205695\n",
      "-3.3605072086152172\n",
      "4.372515945827908\n",
      "4.244480254572879\n",
      "5.226501926183497\n",
      "0.7898638204612795\n",
      "15.132096794468934\n",
      "-4.482116563316387\n",
      "-1.737129859383147\n",
      "-5.920038735867465\n",
      "-2.4873195681739344\n",
      "11.210551546091336\n",
      "9.86267431027774\n",
      "-2.229213345226762\n",
      "12.285908827495387\n",
      "-9.357564572012855\n",
      "-0.4594096512893284\n",
      "18.54008658139224\n",
      "5.404234207570715\n",
      "18.546245243825368\n",
      "2.3273867388382237\n",
      "-5.768962557552358\n",
      "5.715006060242525\n",
      "-8.797849482756922\n",
      "-14.466597152656643\n",
      "-8.608416483516912\n",
      "-4.418322944081249\n",
      "-11.043199934942962\n",
      "-12.555145538086341\n",
      "-2.856457170217482\n",
      "-3.1762231974751227\n",
      "1.8194643977955727\n",
      "-10.779261654403928\n",
      "-6.770544385881333\n",
      "-2.8072947873506027\n",
      "-8.48953269133825\n",
      "0.7802874971512888\n",
      "2.3922279765788046\n",
      "13.05480016183187\n",
      "4.559070425639427\n",
      "-16.850799542342685\n",
      "11.250362617195151\n",
      "-8.236374556370414\n",
      "-0.2721005876780715\n",
      "11.878147555952618\n",
      "3.753303635759267\n",
      "13.249014187771536\n",
      "-4.2367953207278894\n",
      "-5.267554056354476\n",
      "15.183501464439303\n",
      "-1.1680065294183302\n",
      "-6.086962161804453\n",
      "-5.970178577928389\n",
      "-10.444754807685035\n",
      "1.7900172023619376\n",
      "1.4780975329529353\n",
      "-9.39027238904215\n",
      "-12.38669277047071\n",
      "-0.2668139014689537\n",
      "9.356447944921483\n",
      "3.4586598662946346\n",
      "-1.7148440369353226\n",
      "-0.8523205609895704\n",
      "6.439342616364647\n",
      "-6.7227880930447315\n",
      "11.529039130276452\n",
      "6.664121653689987\n",
      "-7.7445221822256\n",
      "6.139485814065502\n",
      "0.9955123783637\n",
      "3.3449347161057736\n",
      "1.4947798671629278\n",
      "-2.416009792814297\n",
      "2.8571054368188498\n",
      "2.004663742726816\n",
      "9.312738002700197\n",
      "-2.6123919103916236\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "3.006057367294162\n",
      "-1.1350115838096895\n",
      "-7.197688655032078\n",
      "0.46500443233254196\n",
      "-1.7344908240169672\n",
      "2.358829978130652\n",
      "2.5942423512284702\n",
      "-0.9663872534469975\n",
      "-0.023181675311362837\n",
      "-6.4472585572843455\n",
      "-6.981274695796035\n",
      "-0.5374649346535368\n",
      "0.5941857876028777\n",
      "-5.082289715180072\n",
      "-1.9600661466681144\n",
      "5.093000094532518\n",
      "0.6714036791773698\n",
      "5.479600199374281\n",
      "-3.5076912109532987\n",
      "-1.3715831231921467\n",
      "-4.419594134938205\n",
      "-6.776052250295771\n",
      "6.024902885930858\n",
      "3.0279934535729836\n",
      "6.614677080106419\n",
      "6.142170312914897\n",
      "-9.887361320707654\n",
      "5.797750588911487\n",
      "9.761172948107617\n",
      "-11.562161901608807\n",
      "4.968486507392963\n",
      "6.529381677105385\n",
      "6.074789682238454\n",
      "17.340944157096832\n",
      "-7.386532773081645\n",
      "-2.048806362203183\n",
      "-1.2491843059898362\n",
      "-5.282348970639534\n",
      "7.336997723600607\n",
      "-5.302766465912812\n",
      "1.3758189558551206\n",
      "11.920835542365419\n",
      "-2.2641625243773165\n",
      "-6.718773396887013\n",
      "-2.0766506664917728\n",
      "-10.83456736111461\n",
      "-11.95694988008788\n",
      "14.312066086267144\n",
      "7.752334729524674\n",
      "1.9510424951766954\n",
      "-1.4080553778113039\n",
      "-11.140994744937986\n",
      "-6.006005266143456\n",
      "-6.551155816693102\n",
      "-4.03509677074339\n",
      "-10.499507230050803\n",
      "2.9271759948622393\n",
      "-2.1044108280891543\n",
      "-4.244356505298799\n",
      "-13.097004470570516\n",
      "-1.7973523150965418\n",
      "-4.328678044258588\n",
      "1.0929002554741143\n",
      "2.847319378882284\n",
      "0.6507948083964102\n",
      "9.366311260623702\n",
      "7.4436894013385055\n",
      "-1.1338644332112409\n",
      "12.929417490393986\n",
      "-5.140285448208446\n",
      "0.47302331500343137\n",
      "-1.6089557007758808\n",
      "2.8023046253395827\n",
      "0.2626669231853641\n",
      "-6.233360716944727\n",
      "-2.244930435450316\n",
      "-4.222962771338427\n",
      "-1.3310823182011955\n",
      "3.9175549833599455\n",
      "0.6105237322283068\n",
      "1.8277488635984045\n",
      "3.1580095802320436\n",
      "1.7945411990860436\n",
      "-2.9563462805399405\n",
      "4.537327918869286\n",
      "-0.3435603462526191\n",
      "2.047150569014263\n",
      "1.6590425733326968\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-3.2478902021904443\n",
      "-0.5595103076359395\n",
      "-2.235266199699444\n",
      "0.3110523551516795\n",
      "4.615450875165681\n",
      "-2.307246847442654\n",
      "2.03728097729252\n",
      "2.8859636606649928\n",
      "-4.511900327978084\n",
      "-5.341749243293812\n",
      "-3.2808948295714755\n",
      "-1.7473603016580246\n",
      "-1.865939328864783\n",
      "-2.282642379641068\n",
      "-5.184332469598248\n",
      "-1.628256309885169\n",
      "-6.628326844185706\n",
      "2.4369517528324316\n",
      "-7.033611104306826\n",
      "5.207601104001902\n",
      "-0.50130387085226\n",
      "-12.879425960928048\n",
      "0.7232469096499853\n",
      "6.334860133656345\n",
      "-2.337708899388479\n",
      "5.39349629103611\n",
      "-4.172088409001758\n",
      "-2.5295854485060483\n",
      "6.950447452434155\n",
      "-2.6363861743224843\n",
      "-1.1027300046016548\n",
      "8.547236520821905\n",
      "2.4132914503125247\n",
      "15.976202633216648\n",
      "-1.6903068602142537\n",
      "4.041484947069192\n",
      "3.323887795537859\n",
      "-4.6350793385834\n",
      "-0.7983760312529994\n",
      "13.280436659621106\n",
      "-7.272405407295729\n",
      "-6.661811542877335\n",
      "-22.459552471312637\n",
      "4.954684739990283\n",
      "-9.623136287740616\n",
      "8.302892133083192\n",
      "2.06323990921828\n",
      "13.066934890901539\n",
      "1.2895005398402533\n",
      "-3.679848063598379\n",
      "-5.420695257626284\n",
      "-11.889377471936985\n",
      "10.881823028556955\n",
      "-9.349981799078318\n",
      "-5.711352590012128\n",
      "2.6960824661737455\n",
      "-1.892053375583048\n",
      "-4.62259940341601\n",
      "-0.9101606662449256\n",
      "-9.016709646202592\n",
      "9.651659418803261\n",
      "-10.327578203235635\n",
      "-2.5646134227565103\n",
      "2.301869789141225\n",
      "3.1375051166399293\n",
      "1.8367226767190914\n",
      "3.2799648483531074\n",
      "-3.5736783867625803\n",
      "-0.11975261906384416\n",
      "-3.0550657684305076\n",
      "-12.231781373279562\n",
      "7.657977791867896\n",
      "-1.5161521820251842\n",
      "5.459841663632724\n",
      "-5.429403158112215\n",
      "-4.162783011714413\n",
      "-2.589183823110301\n",
      "-3.5693159426742005\n",
      "2.671400075001372\n",
      "-2.330725149279354\n",
      "1.8089282186909883\n",
      "4.452992570653289\n",
      "-1.4024814770494332\n",
      "0.7044359783441811\n",
      "-1.9107679667277737\n",
      "0.2877592355113978\n",
      "3.012169025640557\n",
      "5.7250634645886676\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.7774464529648741\n",
      "0.28909151972203306\n",
      "-0.7912754076907256\n",
      "-1.056423046465438\n",
      "-0.7288933242315493\n",
      "-3.1071408744197173\n",
      "0.7984398226093964\n",
      "-0.23287354325784887\n",
      "-1.0822464408674848\n",
      "0.5203661087841465\n",
      "-2.5953785886336953\n",
      "0.9819755183589238\n",
      "2.0697407833169303\n",
      "-3.7359404336848234\n",
      "0.7639373008773533\n",
      "-0.3916877394676162\n",
      "-0.9044287744571331\n",
      "1.748274582500632\n",
      "-0.07203255056581925\n",
      "-1.0487835827893734\n",
      "-2.6172649039835165\n",
      "-1.9018503674816656\n",
      "2.6819661108105977\n",
      "0.950490374456989\n",
      "2.325795578319672\n",
      "2.271387686211579\n",
      "-4.702190192530248\n",
      "4.478866661280904\n",
      "0.13526249670374757\n",
      "-4.834538709529155\n",
      "-2.351497959205303\n",
      "3.4568957634154716\n",
      "3.008188247434138\n",
      "2.0806792716517064\n",
      "-5.774102892743609\n",
      "2.7140861316158924\n",
      "0.7208651983309863\n",
      "1.923309976433536\n",
      "5.352545769538679\n",
      "10.314751586813538\n",
      "-2.2645430787180247\n",
      "-2.506191183913616\n",
      "-0.3963335179042382\n",
      "-4.222819445634821\n",
      "10.80514439261645\n",
      "-3.9789956152983534\n",
      "2.5352320273996347\n",
      "6.758289024867105\n",
      "0.473192942079263\n",
      "-1.705615100276574\n",
      "1.6669546779733546\n",
      "-2.144129950909024\n",
      "-0.12149075158689226\n",
      "-6.407408306714866\n",
      "-5.904559543908242\n",
      "-3.1431599176359533\n",
      "-5.038085285068572\n",
      "-0.5753181281702694\n",
      "-6.5814001639003425\n",
      "-3.852322673711904\n",
      "-1.728315323761048\n",
      "-10.307760044355371\n",
      "-3.836189406140264\n",
      "-3.7169480201311544\n",
      "-0.0030300040333303135\n",
      "-8.336099213527884\n",
      "-6.053160598343113\n",
      "-2.9698070653669024\n",
      "5.92518473880049\n",
      "0.38828210520555384\n",
      "-1.2456654623198415\n",
      "6.039714829793995\n",
      "4.46302471068551\n",
      "5.257432615981918\n",
      "4.811598128718582\n",
      "-4.167426741577545\n",
      "2.899629633508001\n",
      "-0.8878754823986508\n",
      "1.0682697890941066\n",
      "-1.540348742989676\n",
      "-2.608615898793513\n",
      "-0.75544504329919\n",
      "-3.1665625522506797\n",
      "-0.44842180127562636\n",
      "-1.3081176352855302\n",
      "-2.1084908042031176\n",
      "-0.25513045278195595\n",
      "0.45095860449654007\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.8936331232673143\n",
      "-0.6264755225938922\n",
      "-0.2553421958048838\n",
      "-1.114410927705124\n",
      "1.8247214897654467\n",
      "-2.2836748856138462\n",
      "-2.418467527565435\n",
      "0.8572363268522247\n",
      "-0.211523318948534\n",
      "-2.436539340665927\n",
      "0.015712098067429237\n",
      "-1.3492854434129566\n",
      "0.21553518499127533\n",
      "-2.368245834826166\n",
      "-3.4991823220366944\n",
      "0.6279869169212697\n",
      "-1.8328264742484737\n",
      "-3.2635011107769265\n",
      "-2.2291104925373437\n",
      "1.3490818650305234\n",
      "1.4156848357988894\n",
      "-3.552790517471364\n",
      "-1.3641778526014796\n",
      "-0.07072707704734604\n",
      "-6.321677095690712\n",
      "-4.767420766581133\n",
      "1.3338106830470895\n",
      "0.3270656209846712\n",
      "4.649957641192194\n",
      "-5.308105291693167\n",
      "-3.719314536094816\n",
      "0.6616509869523892\n",
      "-4.747631325893955\n",
      "6.302664104893851\n",
      "4.286284046352808\n",
      "-6.285251483457214\n",
      "-0.6675990379301905\n",
      "-6.696458322245665\n",
      "5.184487726410789\n",
      "-4.067189815628111\n",
      "0.12468319291689223\n",
      "1.4753265756843548\n",
      "-1.0801947365452027\n",
      "-11.533632465619382\n",
      "-13.885441946791756\n",
      "3.3192236132654918\n",
      "-2.2282409780449908\n",
      "-2.6031992931216235\n",
      "6.356722657735254\n",
      "7.353406677081537\n",
      "-0.26152668866803797\n",
      "2.419840879494764\n",
      "3.684366188811411\n",
      "-0.08574683523343318\n",
      "3.5383234814647997\n",
      "4.611232611249908\n",
      "-4.688210345103647\n",
      "2.7748246255439506\n",
      "-1.099753430440982\n",
      "3.7464821188750026\n",
      "7.1164271739751275\n",
      "-5.610615251272045\n",
      "-4.748442987632633\n",
      "2.8541143992830014\n",
      "3.3936225640420647\n",
      "3.3722934640083584\n",
      "-6.448273667340858\n",
      "1.9379372511479052\n",
      "10.354239046999396\n",
      "-0.6068809220831963\n",
      "0.7506175502123839\n",
      "1.836632085500349\n",
      "-3.470987840632542\n",
      "2.201463486362463\n",
      "-5.7924153601817086\n",
      "-2.1736230892630424\n",
      "4.841642497948519\n",
      "-3.2573808656717977\n",
      "3.330836189965559\n",
      "1.6352140578091807\n",
      "-3.593413701757183\n",
      "3.539055791458859\n",
      "-3.4993777246355764\n",
      "-4.113631652835374\n",
      "2.4962018478680856\n",
      "-0.26800808179444413\n",
      "0.6848581826480025\n",
      "3.0161020508832186\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-1.392369053685608\n",
      "-0.8519432057622179\n",
      "-3.766637928881453\n",
      "-1.1397683597269723\n",
      "1.5384485270463775\n",
      "-2.356234561137652\n",
      "0.17728648713659817\n",
      "-0.12288893239184412\n",
      "-6.461234140544853\n",
      "-1.18020987251961\n",
      "-3.089879124538285\n",
      "-4.904250228284825\n",
      "3.401261626107235\n",
      "-3.7432209876633458\n",
      "1.5888046028047178\n",
      "2.4822633178836067\n",
      "-6.1634835031396396\n",
      "1.1985457900963734\n",
      "-1.4716416212104944\n",
      "-10.119506893250174\n",
      "-6.380142527824736\n",
      "-0.9630315034695998\n",
      "5.83364144208164\n",
      "-0.5081321758868553\n",
      "2.2735811851348586\n",
      "-5.1421049429854975\n",
      "-0.5453550011241295\n",
      "-6.552344716147426\n",
      "-2.7939199768720484\n",
      "6.30371499179935\n",
      "-1.4977494162047609\n",
      "2.9766992450413894\n",
      "9.444993762597855\n",
      "5.229978896428319\n",
      "-2.5463183421229854\n",
      "-3.1750215645208097\n",
      "0.42635329178459547\n",
      "5.6406421910689915\n",
      "5.861528772021515\n",
      "-5.85815960862905\n",
      "2.915968471215479\n",
      "-12.398631317625759\n",
      "4.275620333972856\n",
      "1.7344656243319132\n",
      "-5.3172323949280065\n",
      "0.5728020364447901\n",
      "-5.461580882423711\n",
      "4.633341510109537\n",
      "4.226988673917744\n",
      "7.097282357759366\n",
      "-0.7420006068599417\n",
      "1.0220070523436335\n",
      "-5.907523045704337\n",
      "-3.767508155205474\n",
      "3.948886269302521\n",
      "9.699600521183097\n",
      "-4.642401773282882\n",
      "6.806197024638295\n",
      "-5.490324932895253\n",
      "4.612435493612066\n",
      "-1.7117109074829444\n",
      "-7.147591709049812\n",
      "9.797679524828864\n",
      "-3.564798793473793\n",
      "-0.5870225854874412\n",
      "14.450972628744744\n",
      "-8.583422710641928\n",
      "1.866126654027154\n",
      "-0.3981008286046154\n",
      "6.654437705988533\n",
      "-0.4015399916744981\n",
      "-4.561746812361493\n",
      "10.420538686728246\n",
      "-2.7981189650452354\n",
      "1.2396624575787631\n",
      "4.106938563374429\n",
      "9.742341695378627\n",
      "-3.6484044234318915\n",
      "0.31643113530960104\n",
      "-8.429617202977353\n",
      "0.564262138379375\n",
      "-1.8157816665050475\n",
      "0.18649089995761736\n",
      "-0.8055734040038869\n",
      "0.5870839274001233\n",
      "-9.220648140210491\n",
      "-1.2657276072815327\n",
      "-5.632919938843362\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-1.4865500276880939\n",
      "-0.767694238303854\n",
      "-1.2559138753719485\n",
      "0.8323168170491153\n",
      "3.4045799830672356\n",
      "-4.968893985019623\n",
      "-1.794319245174159\n",
      "-2.051409046085729\n",
      "3.446165631663692\n",
      "-4.1002816879323785\n",
      "-3.188080208231659\n",
      "1.972613076289307\n",
      "0.7640615818124529\n",
      "-6.506090395916908\n",
      "-8.680160804749338\n",
      "-1.9366683757907126\n",
      "2.991791978577851\n",
      "2.3550224978794834\n",
      "1.2510551302647628\n",
      "3.762958725502828\n",
      "2.0112041290628895\n",
      "-8.292413499317401\n",
      "6.065722714820696\n",
      "-5.745043683047092\n",
      "-7.975138685378704\n",
      "0.8258304355794042\n",
      "-7.223969849761872\n",
      "0.1430126047304503\n",
      "-2.822721304626516\n",
      "-4.92049670077647\n",
      "-1.313029339849651\n",
      "-6.872927653782087\n",
      "7.427867425277345\n",
      "9.322857272474621\n",
      "-3.914250020731963\n",
      "1.1425201725341247\n",
      "-14.269491742736385\n",
      "9.134545120341086\n",
      "4.772781491196391\n",
      "2.701779756900624\n",
      "18.050768888522185\n",
      "-5.149273785267033\n",
      "-9.62424737266068\n",
      "9.783361348517307\n",
      "0.36353126892140797\n",
      "-2.0981079148200035\n",
      "-8.23757304528543\n",
      "-3.153199828785896\n",
      "6.792609943266819\n",
      "8.415235875832972\n",
      "-2.626207928606326\n",
      "11.377484035763116\n",
      "-5.669174448134981\n",
      "-14.1995830421675\n",
      "1.9835096595350634\n",
      "-5.3936509120083915\n",
      "7.2626481919445345\n",
      "-9.697836043420185\n",
      "-9.8935700625285\n",
      "1.1988046522950164\n",
      "9.788982955778904\n",
      "-7.075896244300693\n",
      "2.461967381961859\n",
      "-7.495385414837254\n",
      "0.2589950043214797\n",
      "16.08017739245594\n",
      "-1.5588826523441608\n",
      "1.7083110014745981\n",
      "7.754154484401414\n",
      "6.56594749211745\n",
      "6.730397286017629\n",
      "-8.744339567177914\n",
      "-0.8543829383648273\n",
      "13.571390710468993\n",
      "-3.5628017604855087\n",
      "-7.9185578512510935\n",
      "-6.765167639102749\n",
      "5.443813300152094\n",
      "-5.00974372486245\n",
      "-6.721944667568834\n",
      "0.6921778648765732\n",
      "-3.5634125628608295\n",
      "4.108856117585954\n",
      "-0.3824781210208359\n",
      "0.09932650868260617\n",
      "-1.1829674048026078\n",
      "1.7258713698907509\n",
      "0.4245339927197997\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.0674968673331342\n",
      "2.6713858050063997\n",
      "0.8773689583701951\n",
      "-1.6189780296169256\n",
      "0.8261769767210506\n",
      "0.059530341679418175\n",
      "3.017658269121437\n",
      "-2.223265662786251\n",
      "-6.917122748844685\n",
      "-0.25358000844048156\n",
      "3.9120263188225657\n",
      "3.32445369871225\n",
      "11.168812645922417\n",
      "-6.348662677947774\n",
      "-2.6097425475763028\n",
      "-1.4627382488579859\n",
      "-7.4241877905680695\n",
      "3.6179264946477763\n",
      "1.7563679914352759\n",
      "5.68598525341132\n",
      "2.6794485504787033\n",
      "-3.1062618034286613\n",
      "2.9605637225909884\n",
      "1.906614937737724\n",
      "-2.168924047596492\n",
      "-3.927088290719838\n",
      "6.083309467648609\n",
      "10.568535833233243\n",
      "8.2841181383599\n",
      "-14.126366408612695\n",
      "-0.11114697339419748\n",
      "-0.7085619931447811\n",
      "-0.5716296327317008\n",
      "27.780234503713697\n",
      "0.8896164847125221\n",
      "3.1617734714898145\n",
      "-10.300405710252557\n",
      "0.32335247262384703\n",
      "20.618598379596364\n",
      "4.275199410964027\n",
      "-7.662452814928042\n",
      "1.0746598062857857\n",
      "-24.29772027838764\n",
      "-3.4262536970387023\n",
      "0.9059851975409116\n",
      "12.492452352999292\n",
      "-4.0638681364356115\n",
      "9.905339485641003\n",
      "5.385771212189376\n",
      "9.518375840805097\n",
      "-5.748673489459401\n",
      "7.1949160488912725\n",
      "15.12141254410166\n",
      "5.959217332599827\n",
      "-5.822568051902379\n",
      "0.40538061672643627\n",
      "2.782354396411281\n",
      "3.667114117987045\n",
      "-4.575936741083172\n",
      "-3.68267212860074\n",
      "0.9904125799587217\n",
      "-4.883869552628514\n",
      "13.416809438951256\n",
      "-7.872946668856828\n",
      "-10.179869696912625\n",
      "4.376178075322646\n",
      "-2.8090513907299295\n",
      "-3.4092131684691305\n",
      "8.446085410799821\n",
      "5.58543951037174\n",
      "4.360522489695356\n",
      "-2.4311322914135265\n",
      "-5.5842286100810075\n",
      "3.0816749439576316\n",
      "-7.501757330485499\n",
      "-1.9455055391566052\n",
      "-2.939154059030912\n",
      "3.821217501557781\n",
      "-1.0411410035413096\n",
      "-7.708458325874197\n",
      "-3.4906130895423058\n",
      "-1.1065886985354902\n",
      "-1.540213329434319\n",
      "-1.8655804529400613\n",
      "-5.783581410539832\n",
      "-3.4830668185866096\n",
      "-7.099890687044935\n",
      "-1.7081649594832575\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-3.7910672809673054\n",
      "-0.15811259313375225\n",
      "-1.1827699266957388\n",
      "-3.7300734852680355\n",
      "-3.74103920768542\n",
      "-1.0884290937370587\n",
      "-0.9389042257098107\n",
      "-4.77751691808654\n",
      "2.31163894451694\n",
      "-6.284388340481238\n",
      "1.142210209849537\n",
      "0.450558948562251\n",
      "0.1118991147182381\n",
      "0.6161584379770022\n",
      "-1.954048772040509\n",
      "4.115143055674057\n",
      "7.036882438839537\n",
      "7.91305229891788\n",
      "8.368469078237982\n",
      "2.2300998718952467\n",
      "-7.254044977422627\n",
      "15.151603926967033\n",
      "6.668803555770363\n",
      "3.5859436619785297\n",
      "6.55697682550425\n",
      "1.1545283807521125\n",
      "-0.9210943103652572\n",
      "-16.083097441766196\n",
      "10.985915829644165\n",
      "12.993334894222324\n",
      "9.084602060292783\n",
      "4.423368180937352\n",
      "21.33282686732931\n",
      "0.8003023498737104\n",
      "12.23792172559527\n",
      "3.579625697238085\n",
      "13.112905985792455\n",
      "5.023861280877657\n",
      "3.32379788843322\n",
      "-17.176486691863094\n",
      "-4.356975750720952\n",
      "-26.743835025043\n",
      "-9.161782766547237\n",
      "6.952542158610552\n",
      "2.5514240229799934\n",
      "-9.554605483362497\n",
      "1.6415650966688156\n",
      "-10.660512812300803\n",
      "-12.35213414171305\n",
      "-3.4609808487567904\n",
      "3.6043772984200038\n",
      "5.136978041540338\n",
      "16.84846389469896\n",
      "-19.672370518579413\n",
      "-10.361224489123602\n",
      "-0.291685991534884\n",
      "-16.139956203247465\n",
      "1.6116447705425063\n",
      "-12.723871607460165\n",
      "-2.7313218944150526\n",
      "0.5869688016048104\n",
      "1.7672778094928052\n",
      "8.952692186752978\n",
      "-1.1726123902692447\n",
      "3.9189079344996096\n",
      "14.113345371787208\n",
      "-0.23736838739553145\n",
      "-7.761292511596606\n",
      "11.82407627929301\n",
      "13.675699021948336\n",
      "9.119550686141002\n",
      "16.822027610175066\n",
      "12.302180200531694\n",
      "0.6546678508124045\n",
      "-0.687520466900541\n",
      "-7.24493845800972\n",
      "6.152351522140955\n",
      "-11.245550053460954\n",
      "2.2033062691472356\n",
      "-1.444899511025077\n",
      "-0.215174914932439\n",
      "-1.745810083517107\n",
      "2.315334980763615\n",
      "-2.2426122444624754\n",
      "0.3307614541465004\n",
      "-4.1520886788335085\n",
      "-1.0593954303247919\n",
      "4.8971320046104525\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "7.1481778012832615\n",
      "0.5268688093423272\n",
      "-2.3582783259899034\n",
      "-1.960158284973748\n",
      "-0.29493336275847193\n",
      "3.737580275501349\n",
      "2.0933962431479047\n",
      "-3.7422312115213954\n",
      "2.7829056210348826\n",
      "-2.152185091043969\n",
      "-5.76856532133923\n",
      "-6.703202704535169\n",
      "4.719125954442958\n",
      "2.3139020578791696\n",
      "-0.9824481652637344\n",
      "-6.022214674810005\n",
      "0.6307785537337324\n",
      "-8.192587294727844\n",
      "1.6635944500842037\n",
      "-8.790223633032845\n",
      "1.802279547596775\n",
      "-6.783627518995105\n",
      "-6.073430158884005\n",
      "-12.247286495142136\n",
      "-0.8616293500698452\n",
      "-9.2606404380847\n",
      "-5.946642884364677\n",
      "-4.2740190669534766\n",
      "-2.6141897358650685\n",
      "2.255170416020567\n",
      "-7.49039369120574\n",
      "-10.349194944902656\n",
      "-9.856058618402727\n",
      "-5.189978312721979\n",
      "5.81528304379352\n",
      "-10.260479143558813\n",
      "-5.233821371028101\n",
      "1.306155158289525\n",
      "-10.54068330066284\n",
      "11.90067634208993\n",
      "-8.380420749319303\n",
      "5.242220321569034\n",
      "-15.208963217458844\n",
      "-9.822320978418565\n",
      "-0.6888033296245734\n",
      "7.752372917251115\n",
      "7.291227672835113\n",
      "-7.507897222159845\n",
      "-2.2349672108816816\n",
      "-5.556530595966263\n",
      "2.778907314998089\n",
      "13.60421728318027\n",
      "7.57819150518497\n",
      "5.448857421540527\n",
      "-2.8216972758278995\n",
      "8.910941095015264\n",
      "-3.3002504466946947\n",
      "-4.798335715036153\n",
      "-0.6974334020857087\n",
      "-15.500784481015653\n",
      "3.2894198456684154\n",
      "2.118372444785381\n",
      "-11.780277205852668\n",
      "-2.0050371465488044\n",
      "2.08129189708886\n",
      "1.6270398937543464\n",
      "-3.804897403604512\n",
      "-12.252788586965732\n",
      "4.516780042650087\n",
      "8.209295250566706\n",
      "-6.559017010743627\n",
      "11.518758464883721\n",
      "6.068496036779006\n",
      "-2.2948809115948636\n",
      "5.108156451538375\n",
      "-1.465691860473069\n",
      "5.748081599757411\n",
      "-0.3588203252645239\n",
      "3.9116281167237426\n",
      "-2.3911688406132696\n",
      "-4.609193528889864\n",
      "-3.657443894861064\n",
      "-0.8731061764543622\n",
      "-3.667749466425124\n",
      "-1.7859763781484914\n",
      "-3.6074791933039445\n",
      "1.1041574412052335\n",
      "3.3115446555007098\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5329929267492245\n",
      "4.875332782508402\n",
      "1.0914542403855674\n",
      "-4.284385870921077\n",
      "3.663564599820022\n",
      "1.0127878652310671\n",
      "3.0026315162396715\n",
      "2.7875513911045453\n",
      "-0.8685569515691512\n",
      "7.785557310720511\n",
      "0.25497300644333865\n",
      "-6.156604124912545\n",
      "12.653478870493528\n",
      "-8.32911278884924\n",
      "-0.2201371669290903\n",
      "-5.290846593768215\n",
      "-3.7156362569962456\n",
      "2.9626667595476466\n",
      "-6.178007451703857\n",
      "1.4267404101199042\n",
      "-11.903527757542886\n",
      "-2.401148795921249\n",
      "0.5151970177580353\n",
      "2.1828851504743465\n",
      "-5.081408696709263\n",
      "0.8802913675012506\n",
      "-4.933756377259524\n",
      "-7.701836235024799\n",
      "-4.482509287914008\n",
      "-7.61110804941833\n",
      "0.5408502052085276\n",
      "-12.814230311290508\n",
      "-5.333514993336428\n",
      "-10.635658325357392\n",
      "-5.459241124302211\n",
      "15.142137758714567\n",
      "-2.9882522298763483\n",
      "-1.0380300067023027\n",
      "-8.407273866943688\n",
      "1.600433615795896\n",
      "-4.954808032857829\n",
      "-12.295295357245589\n",
      "6.949443603884485\n",
      "-8.638186155695715\n",
      "5.084815763445343\n",
      "-4.2571251217476265\n",
      "-2.970291412726753\n",
      "7.603659038199966\n",
      "4.289143957431607\n",
      "-1.1772648284950398\n",
      "-0.04365765370557506\n",
      "1.2899583863855282\n",
      "15.060186123042703\n",
      "-6.877493061082621\n",
      "-16.228927923033382\n",
      "-1.6525624873698905\n",
      "2.4429484291435934\n",
      "-1.2537067750839848\n",
      "-6.8243591293615795\n",
      "0.9885364738674125\n",
      "-7.459490508091392\n",
      "-8.457307862314256\n",
      "4.19148220017434\n",
      "-4.144217503150974\n",
      "-3.0547550347967714\n",
      "-2.54874539251741\n",
      "0.2546729054390926\n",
      "-5.653441585722821\n",
      "3.6853696121667023\n",
      "-3.9785338450824694\n",
      "1.1291661335928076\n",
      "0.9997386841749125\n",
      "0.38720867288502225\n",
      "0.3520020002755221\n",
      "3.560172934199307\n",
      "-0.33417684058660746\n",
      "-6.2975536413110955\n",
      "-7.773598723528346\n",
      "-0.6119084338608862\n",
      "0.7525578645445099\n",
      "-0.7676605230706276\n",
      "1.2270929949878266\n",
      "3.642766218258153\n",
      "-2.317538442667657\n",
      "1.6697804663195916\n",
      "-3.335232509409637\n",
      "1.4162566636986385\n",
      "7.618577672381098\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "0.4430328383864385\n",
      "0.8990039869646632\n",
      "0.12315967844693176\n",
      "-0.5636148753772448\n",
      "-1.4181099025787405\n",
      "-5.23492669676833\n",
      "0.5190087974958568\n",
      "-0.6716903636273266\n",
      "-0.09578550001364927\n",
      "0.40316964963529156\n",
      "-5.032185442916469\n",
      "3.5943269367933848\n",
      "-1.3167629492812307\n",
      "-5.077274376857576\n",
      "-1.1668932110994068\n",
      "5.747202640529916\n",
      "-2.3211543367865857\n",
      "3.786038109613429\n",
      "-1.786684335477669\n",
      "-5.1565993266342005\n",
      "4.644200170086621\n",
      "0.08550411165910621\n",
      "5.934012462503175\n",
      "4.8643308242062435\n",
      "7.3042475423161575\n",
      "0.8417241668766993\n",
      "0.13101365275112342\n",
      "-2.4281441655628617\n",
      "2.6837293719440125\n",
      "4.44927822701776\n",
      "-1.7673744491197654\n",
      "0.11260349840225198\n",
      "2.8728105255239793\n",
      "6.864109096831038\n",
      "3.754096017959104\n",
      "-4.412326046317577\n",
      "6.39563201132893\n",
      "1.6570162429733126\n",
      "-3.9420355732739782\n",
      "1.3863463223341224\n",
      "4.912586391994379\n",
      "-5.416221578396538\n",
      "7.624735522956441\n",
      "-1.9475139899612375\n",
      "2.3739049147506237\n",
      "-11.399767938061903\n",
      "-0.8062045513059396\n",
      "-9.66854701096779\n",
      "-1.1219846655225827\n",
      "3.0586374996368155\n",
      "3.1174257843050155\n",
      "3.9831183410177777\n",
      "4.565156220609933\n",
      "-4.51347355851094\n",
      "-5.077927109313867\n",
      "4.906206548213883\n",
      "-11.838646096284569\n",
      "3.9735402864944094\n",
      "-1.3033342667836318\n",
      "5.800106339666942\n",
      "-7.432468986868113\n",
      "8.797599734380823\n",
      "2.536588402577718\n",
      "4.881861706653558\n",
      "-1.0313536118042128\n",
      "-1.6511892645318889\n",
      "0.37366713939529617\n",
      "2.883728093695315\n",
      "5.191503253812007\n",
      "-2.3394044650671004\n",
      "-0.7963977125892479\n",
      "4.836386822165235\n",
      "-0.15320414603224108\n",
      "3.919483533465076\n",
      "0.1663293845180387\n",
      "-0.7391060588063956\n",
      "4.035451738189958\n",
      "-5.396394431313608\n",
      "5.0172236063263345\n",
      "-6.5019157028536325\n",
      "0.09376787075406956\n",
      "-2.892450069856107\n",
      "0.238912695789242\n",
      "0.08689797353599849\n",
      "2.0273347001770468\n",
      "-2.3765484445455662\n",
      "-1.8094888386355132\n",
      "7.735760472977564\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.4585108004162267\n",
      "-0.3942022274816619\n",
      "-2.0284318791643763\n",
      "-0.8523026062942534\n",
      "0.8521478133032439\n",
      "-1.3778540267503168\n",
      "-0.9159754516486099\n",
      "0.532599633272202\n",
      "-0.9813307002018254\n",
      "-0.9090422994278421\n",
      "-2.281774327889881\n",
      "-0.8681266989420331\n",
      "0.39105159175582993\n",
      "-0.8414745445449183\n",
      "-1.150309395912826\n",
      "1.9982035746691549\n",
      "-0.3494265344555013\n",
      "0.04806128147673394\n",
      "-2.2615149509796604\n",
      "-2.394709827832661\n",
      "2.905089233337522\n",
      "-1.4450235040985013\n",
      "-1.059091956655159\n",
      "2.5338534473140273\n",
      "0.6202733440484803\n",
      "3.4473803860170396\n",
      "1.799909460118913\n",
      "-9.159815109705466\n",
      "3.967708954935302\n",
      "2.18705633360916\n",
      "1.0527178102935226\n",
      "-1.580039077483142\n",
      "2.4217737739000778\n",
      "4.091654483825375\n",
      "3.120608766315293\n",
      "0.07887370667945426\n",
      "-1.8708547301608593\n",
      "-5.3875627742386625\n",
      "-1.3593792922803316\n",
      "-5.503142940812519\n",
      "4.380779877913747\n",
      "6.173841114621632\n",
      "-0.2725242764315222\n",
      "1.7103346044443841\n",
      "-4.409694080430564\n",
      "-1.8691656327040136\n",
      "6.664913493147431\n",
      "-6.663638000513656\n",
      "2.400663772801733\n",
      "0.31615931976743494\n",
      "-3.9898643912803706\n",
      "5.638253686407688\n",
      "-4.910324858599502\n",
      "6.724476427732592\n",
      "2.0425242556552456\n",
      "6.7059800507658\n",
      "2.8715555794226235\n",
      "3.731214532214183\n",
      "-0.34691200593083216\n",
      "-0.5416326720047853\n",
      "4.435219902590027\n",
      "-0.8198286896525024\n",
      "5.413682781855287\n",
      "1.8442864036841857\n",
      "2.3486570412078347\n",
      "-2.790346428585758\n",
      "1.9967407019928942\n",
      "-3.516688072295109\n",
      "8.916345625227043\n",
      "-1.751224360064771\n",
      "-0.02048382054325197\n",
      "0.1448085881241747\n",
      "-0.931410031437334\n",
      "4.81863963408769\n",
      "3.101312312362535\n",
      "-2.4219116645789622\n",
      "-0.078172134204047\n",
      "-4.726508865243932\n",
      "-1.4341001098951875\n",
      "-4.890871790659144\n",
      "-4.958689318274236\n",
      "-1.8118862063531056\n",
      "-4.981374324371401\n",
      "0.4693813689498829\n",
      "-2.284291763190487\n",
      "-3.092575710200517\n",
      "-1.4972411025383192\n",
      "0.059772842872469145\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "-0.5096687406137471\n",
      "0.42377343019450475\n",
      "-1.114967504195502\n",
      "-1.301959026015963\n",
      "0.963193097140422\n",
      "-1.9630750679485995\n",
      "0.1133482551732908\n",
      "-0.3247422640409677\n",
      "(2, 13, 15, 8)\n",
      "-2.651123629553914\n",
      "-0.37849176551833935\n",
      "-1.970549285291896\n",
      "-1.9623529930298282\n",
      "-1.722598716353248\n",
      "0.4676692981762709\n",
      "-6.43434016261308\n",
      "1.1076499389829937\n",
      "4.67692928425036\n",
      "4.29865415194371\n",
      "-1.3608031011814155\n",
      "0.8053285866262244\n",
      "-2.884801080984677\n",
      "8.952800342493264\n",
      "5.3262780721274305\n",
      "-1.8263525819809767\n",
      "-2.058811740117399\n",
      "3.4085979527632695\n",
      "0.3502282023271575\n",
      "0.6830362578151936\n",
      "-1.8832806520728758\n",
      "-1.8748017401708892\n",
      "5.800872097600992\n",
      "0.0700918028905736\n",
      "-3.5014179115019592\n",
      "2.7042860046532846\n",
      "0.2834134613064215\n",
      "4.156374107489815\n",
      "-0.4657583406688838\n",
      "-0.43668823961234704\n",
      "-5.568661059450532\n",
      "1.7228803306030227\n",
      "-2.32126108132678\n",
      "0.9104060190760517\n",
      "2.3185253210052474\n",
      "0.9884227110424669\n",
      "3.3171661146423914\n",
      "4.056388322809176\n",
      "-2.481351231812353\n",
      "0.9587244252638418\n",
      "6.039789071624668\n",
      "-6.9647788754489595\n",
      "-1.207993442595811\n",
      "2.68913374363249\n",
      "-4.357440328374455\n",
      "10.593553293410995\n",
      "3.2085690089739396\n",
      "13.987359778277678\n",
      "-3.012807545120225\n",
      "-2.9022651685786105\n",
      "-8.341719357227356\n",
      "-5.262208534311856\n",
      "5.663069601801515\n",
      "1.0870403293800344\n",
      "2.204307054515114\n",
      "-10.732182937938976\n",
      "-6.241982659391952\n",
      "-0.5315883214584048\n",
      "-3.2965495361858124\n",
      "-1.818659973818035\n",
      "0.5919632249081125\n",
      "2.511347446039101\n",
      "-4.2492467251501616\n",
      "5.2193664061345935\n",
      "-2.221874123017794\n",
      "-0.952591730393061\n",
      "-5.99441272625981\n",
      "0.7914793174518812\n",
      "1.169192777685966\n",
      "-0.17321161283558162\n",
      "-3.2634629897694234\n",
      "-3.624075781391651\n",
      "-2.177960371034712\n",
      "8.071713286605444\n",
      "-0.5772703965669042\n",
      "3.362867375261555\n",
      "4.481136446806345\n",
      "-2.8919842848278328\n",
      "10.992888673283165\n",
      "3.031719320009815\n",
      "-12.499912607351698\n",
      "5.268458326945417\n",
      "-1.6764861397290391\n",
      "-8.656957620196504\n",
      "-10.681572576303106\n",
      "6.714924279914404\n",
      "2.838399710505564\n",
      "4.472597719258033\n",
      "0.11421092017748169\n",
      "-1.908724239429236\n",
      "-3.281176012839236\n",
      "0.8992246734230772\n",
      "0.8398534798185114\n",
      "-0.2512704385080684\n",
      "-0.9440971831631487\n",
      "5.172444119783126\n",
      "1.976498141249873\n",
      "2.7674307465180976\n",
      "-6.396110067027045\n",
      "2.9537817134143967\n",
      "-0.8123523899716142\n",
      "-0.5333363087701044\n",
      "0.7126887135827193\n",
      "4.91385105269536\n",
      "-5.144018685128249\n",
      "6.9704139072725795\n",
      "-4.539764690645788\n",
      "5.890926534657737\n",
      "-5.746069312918234\n",
      "2.7425655781637457\n",
      "3.021248020894531\n",
      "-10.041875916680963\n",
      "5.538711871243342\n",
      "-8.558867006158458\n",
      "-4.709621351485485\n",
      "2.559667378319676\n",
      "-2.6695950405846616\n",
      "5.60010694646555\n",
      "-8.372533419593784\n",
      "4.188482779452432\n",
      "0.6336451685592248\n",
      "-3.718482229283161\n",
      "-3.6707277223010766\n",
      "4.342264761857119\n",
      "-1.2189446454497337\n",
      "3.689294517188853\n",
      "5.8916630521687825\n",
      "0.9425645735735466\n",
      "2.360494019322484\n",
      "-3.0969620415079784\n",
      "8.335217546213611\n",
      "3.046807476934797\n",
      "3.79645420332174\n",
      "0.6648878847643189\n",
      "1.9935475976327526\n",
      "1.5439622093183625\n",
      "-7.734570481947818\n",
      "0.2875619956583188\n",
      "7.974812177568166\n",
      "3.3241599561394315\n",
      "-4.071214881150617\n",
      "2.691829629630005\n",
      "4.135610895576852\n",
      "-5.161784234926747\n",
      "-6.956351857845688\n",
      "-0.10924121038207436\n",
      "-4.125264411180336\n",
      "0.6257819886407394\n",
      "4.694920856492189\n",
      "-3.527488771253109\n",
      "3.6316827103777767\n",
      "0.6400762933536268\n",
      "7.949800142589622\n",
      "5.718556588208406\n",
      "3.499703330597773\n",
      "12.77181520232397\n",
      "8.849594783726994\n",
      "2.3715031879269777\n",
      "-1.4253164757342909\n",
      "-0.511266409391018\n",
      "-5.296582832831757\n",
      "-4.204669991725823\n",
      "-6.630677657381133\n",
      "-9.878317238998006\n",
      "-5.321303949654093\n",
      "7.324179191574341\n",
      "2.9601109065738944\n",
      "7.606694812009634\n",
      "11.546307844543865\n",
      "-1.9315724446348215\n",
      "2.26699242190139\n",
      "7.621842745514548\n",
      "5.40584347844595\n",
      "-2.8883795834102473\n",
      "-1.4698187735269894\n",
      "7.913147188421098\n",
      "5.940678769705695\n",
      "3.5073964881857695\n",
      "0.8251220227943832\n",
      "4.806554890201451\n",
      "-4.104494499685099\n",
      "4.143585406590583\n",
      "0.13194884907078794\n",
      "4.353972846494884\n",
      "4.912983635468997\n",
      "-1.4449977173929582\n",
      "5.939207802246897\n",
      "-3.926904077024095\n",
      "2.1284030896719597\n",
      "1.2723740197035336\n",
      "1.5699258064931423\n",
      "0.4427056509973153\n",
      "-2.651123629553914\n",
      "-0.37849176551833935\n",
      "-1.970549285291896\n",
      "-1.9623529930298282\n",
      "-1.722598716353248\n",
      "0.4676692981762709\n",
      "-6.43434016261308\n",
      "1.1076499389829937\n",
      "4.67692928425036\n",
      "4.29865415194371\n",
      "-1.3608031011814155\n",
      "0.8053285866262244\n",
      "-2.884801080984677\n",
      "8.952800342493264\n",
      "5.3262780721274305\n",
      "-1.8263525819809767\n",
      "-2.058811740117399\n",
      "3.4085979527632695\n",
      "0.3502282023271575\n",
      "0.6830362578151936\n",
      "-1.8832806520728758\n",
      "-1.8748017401708892\n",
      "5.800872097600992\n",
      "0.0700918028905736\n",
      "-3.5014179115019592\n",
      "2.7042860046532846\n",
      "0.2834134613064215\n",
      "4.156374107489815\n",
      "-0.4657583406688838\n",
      "-0.43668823961234704\n",
      "-5.568661059450532\n",
      "1.7228803306030227\n",
      "-2.32126108132678\n",
      "0.9104060190760517\n",
      "2.3185253210052474\n",
      "0.9884227110424669\n",
      "3.3171661146423914\n",
      "4.056388322809176\n",
      "-2.481351231812353\n",
      "0.9587244252638418\n",
      "6.039789071624668\n",
      "-6.9647788754489595\n",
      "-1.207993442595811\n",
      "2.68913374363249\n",
      "-4.357440328374455\n",
      "10.593553293410995\n",
      "3.2085690089739396\n",
      "13.987359778277678\n",
      "-3.012807545120225\n",
      "-2.9022651685786105\n",
      "-8.341719357227356\n",
      "-5.262208534311856\n",
      "5.663069601801515\n",
      "1.0870403293800344\n",
      "2.204307054515114\n",
      "-10.732182937938976\n",
      "-6.241982659391952\n",
      "-0.5315883214584048\n",
      "-3.2965495361858124\n",
      "-1.818659973818035\n",
      "0.5919632249081125\n",
      "2.511347446039101\n",
      "-4.2492467251501616\n",
      "5.2193664061345935\n",
      "-2.221874123017794\n",
      "-0.952591730393061\n",
      "-5.99441272625981\n",
      "0.7914793174518812\n",
      "1.169192777685966\n",
      "-0.17321161283558162\n",
      "-3.2634629897694234\n",
      "-3.624075781391651\n",
      "-2.177960371034712\n",
      "8.071713286605444\n",
      "-0.5772703965669042\n",
      "3.362867375261555\n",
      "4.481136446806345\n",
      "-2.8919842848278328\n",
      "10.992888673283165\n",
      "3.031719320009815\n",
      "-12.499912607351698\n",
      "5.268458326945417\n",
      "-1.6764861397290391\n",
      "-8.656957620196504\n",
      "-10.681572576303106\n",
      "6.714924279914404\n",
      "2.838399710505564\n",
      "4.472597719258033\n",
      "0.11421092017748169\n",
      "-1.908724239429236\n",
      "-3.281176012839236\n",
      "0.8992246734230772\n",
      "0.8398534798185114\n",
      "-0.2512704385080684\n",
      "-0.9440971831631487\n",
      "5.172444119783126\n",
      "1.976498141249873\n",
      "2.7674307465180976\n",
      "-6.396110067027045\n",
      "2.9537817134143967\n",
      "-0.8123523899716142\n",
      "-0.5333363087701044\n",
      "0.7126887135827193\n",
      "4.91385105269536\n",
      "-5.144018685128249\n",
      "6.9704139072725795\n",
      "-4.539764690645788\n",
      "5.890926534657737\n",
      "-5.746069312918234\n",
      "2.7425655781637457\n",
      "3.021248020894531\n",
      "-10.041875916680963\n",
      "5.538711871243342\n",
      "-8.558867006158458\n",
      "-4.709621351485485\n",
      "2.559667378319676\n",
      "-2.6695950405846616\n",
      "5.60010694646555\n",
      "-8.372533419593784\n",
      "4.188482779452432\n",
      "0.6336451685592248\n",
      "-3.718482229283161\n",
      "-3.6707277223010766\n",
      "4.342264761857119\n",
      "-1.2189446454497337\n",
      "3.689294517188853\n",
      "5.8916630521687825\n",
      "0.9425645735735466\n",
      "2.360494019322484\n",
      "-3.0969620415079784\n",
      "8.335217546213611\n",
      "3.046807476934797\n",
      "3.79645420332174\n",
      "0.6648878847643189\n",
      "1.9935475976327526\n",
      "1.5439622093183625\n",
      "-7.734570481947818\n",
      "0.2875619956583188\n",
      "7.974812177568166\n",
      "3.3241599561394315\n",
      "-4.071214881150617\n",
      "2.691829629630005\n",
      "4.135610895576852\n",
      "-5.161784234926747\n",
      "-6.956351857845688\n",
      "-0.10924121038207436\n",
      "-4.125264411180336\n",
      "0.6257819886407394\n",
      "4.694920856492189\n",
      "-3.527488771253109\n",
      "3.6316827103777767\n",
      "0.6400762933536268\n",
      "7.949800142589622\n",
      "5.718556588208406\n",
      "3.499703330597773\n",
      "12.77181520232397\n",
      "8.849594783726994\n",
      "2.3715031879269777\n",
      "-1.4253164757342909\n",
      "-0.511266409391018\n",
      "-5.296582832831757\n",
      "-4.204669991725823\n",
      "-6.630677657381133\n",
      "-9.878317238998006\n",
      "-5.321303949654093\n",
      "7.324179191574341\n",
      "2.9601109065738944\n",
      "7.606694812009634\n",
      "11.546307844543865\n",
      "-1.9315724446348215\n",
      "2.26699242190139\n",
      "7.621842745514548\n",
      "5.40584347844595\n",
      "-2.8883795834102473\n",
      "-1.4698187735269894\n",
      "7.913147188421098\n",
      "5.940678769705695\n",
      "3.5073964881857695\n",
      "0.8251220227943832\n",
      "4.806554890201451\n",
      "-4.104494499685099\n",
      "4.143585406590583\n",
      "0.13194884907078794\n",
      "4.353972846494884\n",
      "4.912983635468997\n",
      "-1.4449977173929582\n",
      "5.939207802246897\n",
      "-3.926904077024095\n",
      "2.1284030896719597\n",
      "1.2723740197035336\n",
      "1.5699258064931423\n",
      "0.4427056509973153\n",
      "-2.651123629553914\n",
      "-0.37849176551833935\n",
      "-1.970549285291896\n",
      "-1.9623529930298282\n",
      "-1.722598716353248\n",
      "0.4676692981762709\n",
      "-6.43434016261308\n",
      "1.1076499389829937\n",
      "4.67692928425036\n",
      "4.29865415194371\n",
      "-1.3608031011814155\n",
      "0.8053285866262244\n",
      "-2.884801080984677\n",
      "8.952800342493264\n",
      "5.3262780721274305\n",
      "-1.8263525819809767\n",
      "-2.058811740117399\n",
      "3.4085979527632695\n",
      "0.3502282023271575\n",
      "0.6830362578151936\n",
      "-1.8832806520728758\n",
      "-1.8748017401708892\n",
      "5.800872097600992\n",
      "0.0700918028905736\n",
      "-3.5014179115019592\n",
      "2.7042860046532846\n",
      "0.2834134613064215\n",
      "4.156374107489815\n",
      "-0.4657583406688838\n",
      "-0.43668823961234704\n",
      "-5.568661059450532\n",
      "1.7228803306030227\n",
      "-2.32126108132678\n",
      "0.9104060190760517\n",
      "2.3185253210052474\n",
      "0.9884227110424669\n",
      "3.3171661146423914\n",
      "4.056388322809176\n",
      "-2.481351231812353\n",
      "0.9587244252638418\n",
      "6.039789071624668\n",
      "-6.9647788754489595\n",
      "-1.207993442595811\n",
      "2.68913374363249\n",
      "-4.357440328374455\n",
      "10.593553293410995\n",
      "3.2085690089739396\n",
      "13.987359778277678\n",
      "-3.012807545120225\n",
      "-2.9022651685786105\n",
      "-8.341719357227356\n",
      "-5.262208534311856\n",
      "5.663069601801515\n",
      "1.0870403293800344\n",
      "2.204307054515114\n",
      "-10.732182937938976\n",
      "-6.241982659391952\n",
      "-0.5315883214584048\n",
      "-3.2965495361858124\n",
      "-1.818659973818035\n",
      "0.5919632249081125\n",
      "2.511347446039101\n",
      "-4.2492467251501616\n",
      "5.2193664061345935\n",
      "-2.221874123017794\n",
      "-0.952591730393061\n",
      "-5.99441272625981\n",
      "0.7914793174518812\n",
      "1.169192777685966\n",
      "-0.17321161283558162\n",
      "-3.2634629897694234\n",
      "-3.624075781391651\n",
      "-2.177960371034712\n",
      "8.071713286605444\n",
      "-0.5772703965669042\n",
      "3.362867375261555\n",
      "4.481136446806345\n",
      "-2.8919842848278328\n",
      "10.992888673283165\n",
      "3.031719320009815\n",
      "-12.499912607351698\n",
      "5.268458326945417\n",
      "-1.6764861397290391\n",
      "-8.656957620196504\n",
      "-10.681572576303106\n",
      "6.714924279914404\n",
      "2.838399710505564\n",
      "4.472597719258033\n",
      "0.11421092017748169\n",
      "-1.908724239429236\n",
      "-3.281176012839236\n",
      "0.8992246734230772\n",
      "0.8398534798185114\n",
      "-0.2512704385080684\n",
      "-0.9440971831631487\n",
      "5.172444119783126\n",
      "1.976498141249873\n",
      "2.7674307465180976\n",
      "-6.396110067027045\n",
      "2.9537817134143967\n",
      "-0.8123523899716142\n",
      "-0.5333363087701044\n",
      "0.7126887135827193\n",
      "4.91385105269536\n",
      "-5.144018685128249\n",
      "6.9704139072725795\n",
      "-4.539764690645788\n",
      "5.890926534657737\n",
      "-5.746069312918234\n",
      "2.7425655781637457\n",
      "3.021248020894531\n",
      "-10.041875916680963\n",
      "5.538711871243342\n",
      "-8.558867006158458\n",
      "-4.709621351485485\n",
      "2.559667378319676\n",
      "-2.6695950405846616\n",
      "5.60010694646555\n",
      "-8.372533419593784\n",
      "4.188482779452432\n",
      "0.6336451685592248\n",
      "-3.718482229283161\n",
      "-3.6707277223010766\n",
      "4.342264761857119\n",
      "-1.2189446454497337\n",
      "3.689294517188853\n",
      "5.8916630521687825\n",
      "0.9425645735735466\n",
      "2.360494019322484\n",
      "-3.0969620415079784\n",
      "8.335217546213611\n",
      "3.046807476934797\n",
      "3.79645420332174\n",
      "0.6648878847643189\n",
      "1.9935475976327526\n",
      "1.5439622093183625\n",
      "-7.734570481947818\n",
      "0.2875619956583188\n",
      "7.974812177568166\n",
      "3.3241599561394315\n",
      "-4.071214881150617\n",
      "2.691829629630005\n",
      "4.135610895576852\n",
      "-5.161784234926747\n",
      "-6.956351857845688\n",
      "-0.10924121038207436\n",
      "-4.125264411180336\n",
      "0.6257819886407394\n",
      "4.694920856492189\n",
      "-3.527488771253109\n",
      "3.6316827103777767\n",
      "0.6400762933536268\n",
      "7.949800142589622\n",
      "5.718556588208406\n",
      "3.499703330597773\n",
      "12.77181520232397\n",
      "8.849594783726994\n",
      "2.3715031879269777\n",
      "-1.4253164757342909\n",
      "-0.511266409391018\n",
      "-5.296582832831757\n",
      "-4.204669991725823\n",
      "-6.630677657381133\n",
      "-9.878317238998006\n",
      "-5.321303949654093\n",
      "7.324179191574341\n",
      "2.9601109065738944\n",
      "7.606694812009634\n",
      "11.546307844543865\n",
      "-1.9315724446348215\n",
      "2.26699242190139\n",
      "7.621842745514548\n",
      "5.40584347844595\n",
      "-2.8883795834102473\n",
      "-1.4698187735269894\n",
      "7.913147188421098\n",
      "5.940678769705695\n",
      "3.5073964881857695\n",
      "0.8251220227943832\n",
      "4.806554890201451\n",
      "-4.104494499685099\n",
      "4.143585406590583\n",
      "0.13194884907078794\n",
      "4.353972846494884\n",
      "4.912983635468997\n",
      "-1.4449977173929582\n",
      "5.939207802246897\n",
      "-3.926904077024095\n",
      "2.1284030896719597\n",
      "1.2723740197035336\n",
      "1.5699258064931423\n",
      "0.4427056509973153\n",
      "\u001b[92m All tests passed.\n"
     ]
    }
   ],
   "source": [
    "np.random.seed(1)\n",
    "A_prev = np.random.randn(2, 5, 7, 4)\n",
    "W = np.random.randn(3, 3, 4, 8)\n",
    "b = np.random.randn(1, 1, 1, 8)\n",
    "hparameters = {\"pad\" : 1,\n",
    "               \"stride\": 2}\n",
    "\n",
    "Z, cache_conv = conv_forward(A_prev, W, b, hparameters)\n",
    "print(\"Z's mean =\\n\", np.mean(Z))\n",
    "print(\"Z[0,2,1] =\\n\", Z[0, 2, 1])\n",
    "print(\"cache_conv[0][1][2][3] =\\n\", cache_conv[0][1][2][3])\n",
    "\n",
    "conv_forward_test(conv_forward)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, a CONV layer should also contain an activation, in which case you would add the following line of code:\n",
    "\n",
    "```python\n",
    "# Convolve the window to get back one output neuron\n",
    "Z[i, h, w, c] = ...\n",
    "# Apply activation\n",
    "A[i, h, w, c] = activation(Z[i, h, w, c])\n",
    "```\n",
    "\n",
    "You don't need to do it here, however. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='4'></a>\n",
    "## 4 - Pooling Layer \n",
    "\n",
    "The pooling (POOL) layer reduces the height and width of the input. It helps reduce computation, as well as helps make feature detectors more invariant to its position in the input. The two types of pooling layers are: \n",
    "\n",
    "- Max-pooling layer: slides an ($f, f$) window over the input and stores the max value of the window in the output.\n",
    "\n",
    "- Average-pooling layer: slides an ($f, f$) window over the input and stores the average value of the window in the output.\n",
    "\n",
    "<table>\n",
    "<td>\n",
    "<img src=\"images/max_pool1.png\" style=\"width:500px;height:300px;\">\n",
    "<td>\n",
    "\n",
    "<td>\n",
    "<img src=\"images/a_pool.png\" style=\"width:500px;height:300px;\">\n",
    "<td>\n",
    "</table>\n",
    "\n",
    "These pooling layers have no parameters for backpropagation to train. However, they have hyperparameters such as the window size $f$. This specifies the height and width of the $f \\times f$ window you would compute a *max* or *average* over. \n",
    "\n",
    "<a name='4-1'></a>\n",
    "### 4.1 - Forward Pooling\n",
    "Now, you are going to implement MAX-POOL and AVG-POOL, in the same function. \n",
    "\n",
    "<a name='ex-4'></a>\n",
    "### Exercise 4 - pool_forward\n",
    "\n",
    "Implement the forward pass of the pooling layer. Follow the hints in the comments below.\n",
    "\n",
    "**Reminder**:\n",
    "As there's no padding, the formulas binding the output shape of the pooling to the input shape is:\n",
    "\n",
    "$$n_H = \\Bigl\\lfloor \\frac{n_{H_{prev}} - f}{stride} \\Bigr\\rfloor +1$$\n",
    "\n",
    "$$n_W = \\Bigl\\lfloor \\frac{n_{W_{prev}} - f}{stride} \\Bigr\\rfloor +1$$\n",
    "\n",
    "$$n_C = n_{C_{prev}}$$\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "0201a499bc4a2249c65fa3a736985fac",
     "grade": false,
     "grade_id": "cell-aed533a126205ca2",
     "locked": false,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "# GRADED FUNCTION: pool_forward\n",
    "\n",
    "def pool_forward(A_prev, hparameters, mode = \"max\"):\n",
    "    \"\"\"\n",
    "    Implements the forward pass of the pooling layer\n",
    "    \n",
    "    Arguments:\n",
    "    A_prev -- Input data, numpy array of shape (m, n_H_prev, n_W_prev, n_C_prev)\n",
    "    hparameters -- python dictionary containing \"f\" and \"stride\"\n",
    "    mode -- the pooling mode you would like to use, defined as a string (\"max\" or \"average\")\n",
    "    \n",
    "    Returns:\n",
    "    A -- output of the pool layer, a numpy array of shape (m, n_H, n_W, n_C)\n",
    "    cache -- cache used in the backward pass of the pooling layer, contains the input and hparameters \n",
    "    \"\"\"\n",
    "    \n",
    "    # Retrieve dimensions from the input shape\n",
    "    (m, n_H_prev, n_W_prev, n_C_prev) = A_prev.shape\n",
    "    \n",
    "    # Retrieve hyperparameters from \"hparameters\"\n",
    "    f = hparameters[\"f\"]\n",
    "    stride = hparameters[\"stride\"]\n",
    "    \n",
    "    # Define the dimensions of the output\n",
    "    n_H = int(1 + (n_H_prev - f) / stride)\n",
    "    n_W = int(1 + (n_W_prev - f) / stride)\n",
    "    n_C = n_C_prev\n",
    "    \n",
    "    # Initialize output matrix A\n",
    "    A = np.zeros((m, n_H, n_W, n_C))              \n",
    "    \n",
    "    for i in range(m):                         # loop over the training examples\n",
    "        for h in range(n_H):                     # loop on the vertical axis of the output volume\n",
    "            # Find the vertical start and end of the current \"slice\" (â‰ˆ2 lines)\n",
    "            vert_start = h*stride\n",
    "            vert_end = vert_start + f\n",
    "            \n",
    "            for w in range(n_W):                 # loop on the horizontal axis of the output volume\n",
    "                # Find the vertical start and end of the current \"slice\" (â‰ˆ2 lines)\n",
    "                horiz_start = w*stride\n",
    "                horiz_end = horiz_start + f\n",
    "                \n",
    "                for c in range (n_C):            # loop over the channels of the output volume\n",
    "                    \n",
    "                    # Use the corners to define the current slice on the ith training example of A_prev, channel c. (â‰ˆ1 line)\n",
    "                    a_prev_slice = A_prev[i, vert_start:vert_end, horiz_start:horiz_end, c]\n",
    "                    \n",
    "                    # Compute the pooling operation on the slice. \n",
    "                    # Use an if statement to differentiate the modes. \n",
    "                    # Use np.max and np.mean.\n",
    "                    if mode == \"max\":\n",
    "                        A[i, h, w, c] = np.max(a_prev_slice)\n",
    "                    elif mode == \"average\":\n",
    "                        A[i, h, w, c] = np.mean(a_prev_slice)\n",
    "    \n",
    "    # YOUR CODE STARTS HERE\n",
    "    \n",
    "    \n",
    "    # YOUR CODE ENDS HERE\n",
    "    \n",
    "    # Store the input and hparameters in \"cache\" for pool_backward()\n",
    "    cache = (A_prev, hparameters)\n",
    "    \n",
    "    # Making sure your output shape is correct\n",
    "    #assert(A.shape == (m, n_H, n_W, n_C))\n",
    "    \n",
    "    return A, cache"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "fb7e501b042f94e7bd4326dd6e0bed92",
     "grade": true,
     "grade_id": "cell-ae96f27f888cec37",
     "locked": true,
     "points": 10,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mode = max\n",
      "A.shape = (2, 3, 3, 3)\n",
      "A[1, 1] =\n",
      " [[1.96710175 0.84616065 1.27375593]\n",
      " [1.96710175 0.84616065 1.23616403]\n",
      " [1.62765075 1.12141771 1.2245077 ]]\n",
      "\n",
      "mode = average\n",
      "A.shape = (2, 3, 3, 3)\n",
      "A[1, 1] =\n",
      " [[ 0.44497696 -0.00261695 -0.31040307]\n",
      " [ 0.50811474 -0.23493734 -0.23961183]\n",
      " [ 0.11872677  0.17255229 -0.22112197]]\n",
      "\u001b[92m All tests passed.\n"
     ]
    }
   ],
   "source": [
    "# Case 1: stride of 1\n",
    "np.random.seed(1)\n",
    "A_prev = np.random.randn(2, 5, 5, 3)\n",
    "hparameters = {\"stride\" : 1, \"f\": 3}\n",
    "\n",
    "A, cache = pool_forward(A_prev, hparameters, mode = \"max\")\n",
    "print(\"mode = max\")\n",
    "print(\"A.shape = \" + str(A.shape))\n",
    "print(\"A[1, 1] =\\n\", A[1, 1])\n",
    "print()\n",
    "A, cache = pool_forward(A_prev, hparameters, mode = \"average\")\n",
    "print(\"mode = average\")\n",
    "print(\"A.shape = \" + str(A.shape))\n",
    "print(\"A[1, 1] =\\n\", A[1, 1])\n",
    "\n",
    "pool_forward_test(pool_forward)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Expected output**\n",
    "\n",
    "```\n",
    "mode = max\n",
    "A.shape = (2, 3, 3, 3)\n",
    "A[1, 1] =\n",
    " [[1.96710175 0.84616065 1.27375593]\n",
    " [1.96710175 0.84616065 1.23616403]\n",
    " [1.62765075 1.12141771 1.2245077 ]]\n",
    "\n",
    "mode = average\n",
    "A.shape = (2, 3, 3, 3)\n",
    "A[1, 1] =\n",
    " [[ 0.44497696 -0.00261695 -0.31040307]\n",
    " [ 0.50811474 -0.23493734 -0.23961183]\n",
    " [ 0.11872677  0.17255229 -0.22112197]]\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "756f8dfdbdba11c66fc0b342d8be23c4",
     "grade": true,
     "grade_id": "cell-2bc34b23ee92311b",
     "locked": true,
     "points": 0,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mode = max\n",
      "A.shape = (2, 2, 2, 3)\n",
      "A[0] =\n",
      " [[[1.74481176 0.90159072 1.65980218]\n",
      "  [1.74481176 1.6924546  1.65980218]]\n",
      "\n",
      " [[1.13162939 1.51981682 2.18557541]\n",
      "  [1.13162939 1.6924546  2.18557541]]]\n",
      "\n",
      "mode = average\n",
      "A.shape = (2, 2, 2, 3)\n",
      "A[1] =\n",
      " [[[-0.17313416  0.32377198 -0.34317572]\n",
      "  [ 0.02030094  0.14141479 -0.01231585]]\n",
      "\n",
      " [[ 0.42944926  0.08446996 -0.27290905]\n",
      "  [ 0.15077452  0.28911175  0.00123239]]]\n"
     ]
    }
   ],
   "source": [
    "# Case 2: stride of 2\n",
    "np.random.seed(1)\n",
    "A_prev = np.random.randn(2, 5, 5, 3)\n",
    "hparameters = {\"stride\" : 2, \"f\": 3}\n",
    "\n",
    "A, cache = pool_forward(A_prev, hparameters)\n",
    "print(\"mode = max\")\n",
    "print(\"A.shape = \" + str(A.shape))\n",
    "print(\"A[0] =\\n\", A[0])\n",
    "print()\n",
    "\n",
    "A, cache = pool_forward(A_prev, hparameters, mode = \"average\")\n",
    "print(\"mode = average\")\n",
    "print(\"A.shape = \" + str(A.shape))\n",
    "print(\"A[1] =\\n\", A[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Expected Output:**\n",
    "    \n",
    "```\n",
    "mode = max\n",
    "A.shape = (2, 2, 2, 3)\n",
    "A[0] =\n",
    " [[[1.74481176 0.90159072 1.65980218]\n",
    "  [1.74481176 1.6924546  1.65980218]]\n",
    "\n",
    " [[1.13162939 1.51981682 2.18557541]\n",
    "  [1.13162939 1.6924546  2.18557541]]]\n",
    "\n",
    "mode = average\n",
    "A.shape = (2, 2, 2, 3)\n",
    "A[1] =\n",
    " [[[-0.17313416  0.32377198 -0.34317572]\n",
    "  [ 0.02030094  0.14141479 -0.01231585]]\n",
    "\n",
    " [[ 0.42944926  0.08446996 -0.27290905]\n",
    "  [ 0.15077452  0.28911175  0.00123239]]]\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font color='blue'>\n",
    "    \n",
    "**What you should remember**:\n",
    "\n",
    "* A convolution extracts features from an input image by taking the dot product between the input data and a 2D array of weights (the filter). \n",
    "* The 2D output of the convolution is called the feature map\n",
    "* A convolution layer is where the filter slides over the image and computes the dot product \n",
    "    * This transforms the input volume into an output volume of different size \n",
    "* Zero padding helps keep more information at the image borders, and is helpful for building deeper networks, because you can build a CONV layer without shrinking the height and width of the volumes\n",
    "* Pooling layers gradually reduce the height and width of the input by sliding a 2D window over each specified region, then summarizing the features in that region"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Congratulations**! You have now implemented the forward passes of all the layers of a convolutional network. Great work!\n",
    "\n",
    "The remainder of this notebook is optional, and will not be graded. If you carry on, just remember to hit the Submit button to submit your work for grading first. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='5'></a>\n",
    "## 5 - Backpropagation in Convolutional Neural Networks (OPTIONAL / UNGRADED)\n",
    "\n",
    "In modern deep learning frameworks, you only have to implement the forward pass, and the framework takes care of the backward pass, so most deep learning engineers don't need to bother with the details of the backward pass. The backward pass for convolutional networks is complicated. If you wish, you can work through this optional portion of the notebook to get a sense of what backprop in a convolutional network looks like. \n",
    "\n",
    "When in an earlier course you implemented a simple (fully connected) neural network, you used backpropagation to compute the derivatives with respect to the cost to update the parameters. Similarly, in convolutional neural networks you can calculate the derivatives with respect to the cost in order to update the parameters. The backprop equations are not trivial and were not derived in lecture, but  are briefly presented below.\n",
    "\n",
    "<a name='5-1'></a>\n",
    "### 5.1 - Convolutional Layer Backward Pass \n",
    "\n",
    "Let's start by implementing the backward pass for a CONV layer. \n",
    "\n",
    "<a name='5-1-1'></a>\n",
    "#### 5.1.1 - Computing dA:\n",
    "This is the formula for computing $dA$ with respect to the cost for a certain filter $W_c$ and a given training example:\n",
    "\n",
    "$$dA \\mathrel{+}= \\sum _{h=0} ^{n_H} \\sum_{w=0} ^{n_W} W_c \\times dZ_{hw} \\tag{1}$$\n",
    "\n",
    "Where $W_c$ is a filter and $dZ_{hw}$ is a scalar corresponding to the gradient of the cost with respect to the output of the conv layer Z at the hth row and wth column (corresponding to the dot product taken at the ith stride left and jth stride down). Note that at each time, you multiply the the same filter $W_c$ by a different dZ when updating dA. We do so mainly because when computing the forward propagation, each filter is dotted and summed by a different a_slice. Therefore when computing the backprop for dA, you are just adding the gradients of all the a_slices. \n",
    "\n",
    "In code, inside the appropriate for-loops, this formula translates into:\n",
    "```python\n",
    "da_prev_pad[vert_start:vert_end, horiz_start:horiz_end, :] += W[:,:,:,c] * dZ[i, h, w, c]\n",
    "```\n",
    "\n",
    "<a name='5-1-2'></a>\n",
    "#### 5.1.2 - Computing dW:\n",
    "This is the formula for computing $dW_c$ ($dW_c$ is the derivative of one filter) with respect to the loss:\n",
    "\n",
    "$$dW_c  \\mathrel{+}= \\sum _{h=0} ^{n_H} \\sum_{w=0} ^ {n_W} a_{slice} \\times dZ_{hw}  \\tag{2}$$\n",
    "\n",
    "Where $a_{slice}$ corresponds to the slice which was used to generate the activation $Z_{ij}$. Hence, this ends up giving us the gradient for $W$ with respect to that slice. Since it is the same $W$, we will just add up all such gradients to get $dW$. \n",
    "\n",
    "In code, inside the appropriate for-loops, this formula translates into:\n",
    "```python\n",
    "dW[:,:,:,c] \\mathrel{+}= a_slice * dZ[i, h, w, c]\n",
    "```\n",
    "\n",
    "<a name='5-1-3'></a>\n",
    "#### 5.1.3 - Computing db:\n",
    "\n",
    "This is the formula for computing $db$ with respect to the cost for a certain filter $W_c$:\n",
    "\n",
    "$$db = \\sum_h \\sum_w dZ_{hw} \\tag{3}$$\n",
    "\n",
    "As you have previously seen in basic neural networks, db is computed by summing $dZ$. In this case, you are just summing over all the gradients of the conv output (Z) with respect to the cost. \n",
    "\n",
    "In code, inside the appropriate for-loops, this formula translates into:\n",
    "```python\n",
    "db[:,:,:,c] += dZ[i, h, w, c]\n",
    "```\n",
    "\n",
    "<a name='ex-5'></a>\n",
    "### Exercise 5 - conv_backward\n",
    "\n",
    "Implement the `conv_backward` function below. You should sum over all the training examples, filters, heights, and widths. You should then compute the derivatives using formulas 1, 2 and 3 above. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "ac01f3e4e6f7707fb3153d5306020619",
     "grade": false,
     "grade_id": "cell-651d7957ed306d8d",
     "locked": false,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "def conv_backward(dZ, cache):\n",
    "    \"\"\"\n",
    "    Implement the backward propagation for a convolution function\n",
    "    \n",
    "    Arguments:\n",
    "    dZ -- gradient of the cost with respect to the output of the conv layer (Z), numpy array of shape (m, n_H, n_W, n_C)\n",
    "    cache -- cache of values needed for the conv_backward(), output of conv_forward()\n",
    "    \n",
    "    Returns:\n",
    "    dA_prev -- gradient of the cost with respect to the input of the conv layer (A_prev),\n",
    "               numpy array of shape (m, n_H_prev, n_W_prev, n_C_prev)\n",
    "    dW -- gradient of the cost with respect to the weights of the conv layer (W)\n",
    "          numpy array of shape (f, f, n_C_prev, n_C)\n",
    "    db -- gradient of the cost with respect to the biases of the conv layer (b)\n",
    "          numpy array of shape (1, 1, 1, n_C)\n",
    "    \"\"\"    \n",
    "    \n",
    "        \n",
    "    # Retrieve information from \"cache\"\n",
    "    # (A_prev, W, b, hparameters) = None\n",
    "    # Retrieve dimensions from A_prev's shape\n",
    "    # (m, n_H_prev, n_W_prev, n_C_prev) = None\n",
    "    # Retrieve dimensions from W's shape\n",
    "    # (f, f, n_C_prev, n_C) = None\n",
    "    \n",
    "    # Retrieve information from \"hparameters\"\n",
    "    # stride = None\n",
    "    # pad = None\n",
    "    \n",
    "    # Retrieve dimensions from dZ's shape\n",
    "    # (m, n_H, n_W, n_C) = None\n",
    "    \n",
    "    # Initialize dA_prev, dW, db with the correct shapes\n",
    "    # dA_prev = None                          \n",
    "    # dW = None\n",
    "    # db = None\n",
    "    \n",
    "    # Pad A_prev and dA_prev\n",
    "    # A_prev_pad = zero_pad(A_prev, pad)\n",
    "    # dA_prev_pad = zero_pad(dA_prev, pad)\n",
    "    \n",
    "    #for i in range(m):                       # loop over the training examples\n",
    "        \n",
    "        # select ith training example from A_prev_pad and dA_prev_pad\n",
    "        # a_prev_pad = None\n",
    "        # da_prev_pad = None\n",
    "        \n",
    "        #for h in range(n_H):                   # loop over vertical axis of the output volume\n",
    "        #    for w in range(n_W):               # loop over horizontal axis of the output volume\n",
    "        #        for c in range(n_C):           # loop over the channels of the output volume\n",
    "                    \n",
    "                    # Find the corners of the current \"slice\"\n",
    "                    # vert_start = None\n",
    "                    # vert_end = None\n",
    "                    # horiz_start = None\n",
    "                    # horiz_end = None\n",
    "\n",
    "                    # Use the corners to define the slice from a_prev_pad\n",
    "                    # a_slice = None\n",
    "\n",
    "                    # Update gradients for the window and the filter's parameters using the code formulas given above\n",
    "                    # da_prev_pad[vert_start:vert_end, horiz_start:horiz_end, :] += None\n",
    "                    # dW[:,:,:,c] += None\n",
    "                    # db[:,:,:,c] += None\n",
    "                    \n",
    "        # Set the ith training example's dA_prev to the unpadded da_prev_pad (Hint: use X[pad:-pad, pad:-pad, :])\n",
    "        # dA_prev[i, :, :, :] = None\n",
    "    # YOUR CODE STARTS HERE\n",
    "    \n",
    "    \n",
    "    # YOUR CODE ENDS HERE\n",
    "    \n",
    "    # Making sure your output shape is correct\n",
    "    assert(dA_prev.shape == (m, n_H_prev, n_W_prev, n_C_prev))\n",
    "    \n",
    "    return dA_prev, dW, db"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "fa7b07d566b435decefd8c5bd1b5c4db",
     "grade": true,
     "grade_id": "cell-ddba321326674547",
     "locked": true,
     "points": 0,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "# We'll run conv_forward to initialize the 'Z' and 'cache_conv\",\n",
    "# which we'll use to test the conv_backward function\n",
    "np.random.seed(1)\n",
    "A_prev = np.random.randn(10, 4, 4, 3)\n",
    "W = np.random.randn(2, 2, 3, 8)\n",
    "b = np.random.randn(1, 1, 1, 8)\n",
    "hparameters = {\"pad\" : 2,\n",
    "               \"stride\": 2}\n",
    "Z, cache_conv = conv_forward(A_prev, W, b, hparameters)\n",
    "\n",
    "# Test conv_backward\n",
    "dA, dW, db = conv_backward(Z, cache_conv)\n",
    "\n",
    "print(\"dA_mean =\", np.mean(dA))\n",
    "print(\"dW_mean =\", np.mean(dW))\n",
    "print(\"db_mean =\", np.mean(db))\n",
    "\n",
    "assert type(dA) == np.ndarray, \"Output must be a np.ndarray\"\n",
    "assert type(dW) == np.ndarray, \"Output must be a np.ndarray\"\n",
    "assert type(db) == np.ndarray, \"Output must be a np.ndarray\"\n",
    "assert dA.shape == (10, 4, 4, 3), f\"Wrong shape for dA  {dA.shape} != (10, 4, 4, 3)\"\n",
    "assert dW.shape == (2, 2, 3, 8), f\"Wrong shape for dW {dW.shape} != (2, 2, 3, 8)\"\n",
    "assert db.shape == (1, 1, 1, 8), f\"Wrong shape for db {db.shape} != (1, 1, 1, 8)\"\n",
    "assert np.isclose(np.mean(dA), 1.4524377), \"Wrong values for dA\"\n",
    "assert np.isclose(np.mean(dW), 1.7269914), \"Wrong values for dW\"\n",
    "assert np.isclose(np.mean(db), 7.8392325), \"Wrong values for db\"\n",
    "\n",
    "print(\"\\033[92m All tests passed.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Expected Output**:\n",
    "<table>\n",
    "    <tr>\n",
    "        <td>\n",
    "            dA_mean\n",
    "        </td>\n",
    "        <td>\n",
    "            1.45243777754\n",
    "        </td>\n",
    "    </tr>\n",
    "    <tr>\n",
    "        <td>\n",
    "            dW_mean\n",
    "        </td>\n",
    "        <td>\n",
    "            1.72699145831\n",
    "        </td>\n",
    "    </tr>\n",
    "    <tr>\n",
    "        <td>\n",
    "            db_mean\n",
    "        </td>\n",
    "        <td>\n",
    "            7.83923256462\n",
    "        </td>\n",
    "    </tr>\n",
    "\n",
    "</table>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='5-2'></a>\n",
    "## 5.2 Pooling Layer - Backward Pass\n",
    "\n",
    "Next, let's implement the backward pass for the pooling layer, starting with the MAX-POOL layer. Even though a pooling layer has no parameters for backprop to update, you still need to backpropagate the gradient through the pooling layer in order to compute gradients for layers that came before the pooling layer. \n",
    "\n",
    "<a name='5-2-1'></a>\n",
    "### 5.2.1 Max Pooling - Backward Pass  \n",
    "\n",
    "Before jumping into the backpropagation of the pooling layer, you are going to build a helper function called `create_mask_from_window()` which does the following: \n",
    "\n",
    "$$ X = \\begin{bmatrix}\n",
    "1 && 3 \\\\\n",
    "4 && 2\n",
    "\\end{bmatrix} \\quad \\rightarrow  \\quad M =\\begin{bmatrix}\n",
    "0 && 0 \\\\\n",
    "1 && 0\n",
    "\\end{bmatrix}\\tag{4}$$\n",
    "\n",
    "As you can see, this function creates a \"mask\" matrix which keeps track of where the maximum of the matrix is. True (1) indicates the position of the maximum in X, the other entries are False (0). You'll see later that the backward pass for average pooling is similar to this, but uses a different mask.  \n",
    "\n",
    "<a name='ex-6'></a>\n",
    "### Exercise 6 - create_mask_from_window\n",
    "\n",
    "Implement `create_mask_from_window()`. This function will be helpful for pooling backward. \n",
    "Hints:\n",
    "- [np.max()]() may be helpful. It computes the maximum of an array.\n",
    "- If you have a matrix X and a scalar x: `A = (X == x)` will return a matrix A of the same size as X such that:\n",
    "```\n",
    "A[i,j] = True if X[i,j] = x\n",
    "A[i,j] = False if X[i,j] != x\n",
    "```\n",
    "- Here, you don't need to consider cases where there are several maxima in a matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "f0088c2c652d94afd13fcc4cf81ff5a0",
     "grade": false,
     "grade_id": "cell-75cdfabbbe3c7905",
     "locked": false,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "def create_mask_from_window(x):\n",
    "    \"\"\"\n",
    "    Creates a mask from an input matrix x, to identify the max entry of x.\n",
    "    \n",
    "    Arguments:\n",
    "    x -- Array of shape (f, f)\n",
    "    \n",
    "    Returns:\n",
    "    mask -- Array of the same shape as window, contains a True at the position corresponding to the max entry of x.\n",
    "    \"\"\"    \n",
    "    # (â‰ˆ1 line)\n",
    "    # mask = None\n",
    "    # YOUR CODE STARTS HERE\n",
    "    \n",
    "    \n",
    "    # YOUR CODE ENDS HERE\n",
    "    return mask"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "b239ffa3896a12254d087dc617b92a2a",
     "grade": true,
     "grade_id": "cell-83c1f6349c3fc0ad",
     "locked": true,
     "points": 0,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "np.random.seed(1)\n",
    "x = np.random.randn(2, 3)\n",
    "mask = create_mask_from_window(x)\n",
    "print('x = ', x)\n",
    "print(\"mask = \", mask)\n",
    "\n",
    "x = np.array([[-1, 2, 3],\n",
    "              [2, -3, 2],\n",
    "              [1, 5, -2]])\n",
    "\n",
    "y = np.array([[False, False, False],\n",
    "     [False, False, False],\n",
    "     [False, True, False]])\n",
    "mask = create_mask_from_window(x)\n",
    "\n",
    "assert type(mask) == np.ndarray, \"Output must be a np.ndarray\"\n",
    "assert mask.shape == x.shape, \"Input and output shapes must match\"\n",
    "assert np.allclose(mask, y), \"Wrong output. The True value must be at position (2, 1)\"\n",
    "\n",
    "print(\"\\033[92m All tests passed.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Expected Output:** \n",
    "\n",
    "<table> \n",
    "<tr> \n",
    "<td>\n",
    "\n",
    "**x =**\n",
    "</td>\n",
    "\n",
    "<td>\n",
    "\n",
    "[[ 1.62434536 -0.61175641 -0.52817175] <br>\n",
    " [-1.07296862  0.86540763 -2.3015387 ]]\n",
    "\n",
    "  </td>\n",
    "</tr>\n",
    "\n",
    "<tr> \n",
    "<td>\n",
    "mask =\n",
    "</td>\n",
    "<td>\n",
    "[[ True False False] <br>\n",
    " [False False False]]\n",
    "</td>\n",
    "</tr>\n",
    "\n",
    "\n",
    "</table>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Why keep track of the position of the max? It's because this is the input value that ultimately influenced the output, and therefore the cost. Backprop is computing gradients with respect to the cost, so anything that influences the ultimate cost should have a non-zero gradient. So, backprop will \"propagate\" the gradient back to this particular input value that had influenced the cost. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='5-2-2'></a>\n",
    "### 5.2.2 - Average Pooling - Backward Pass \n",
    "\n",
    "In max pooling, for each input window, all the \"influence\" on the output came from a single input value--the max. In average pooling, every element of the input window has equal influence on the output. So to implement backprop, you will now implement a helper function that reflects this.\n",
    "\n",
    "For example if we did average pooling in the forward pass using a 2x2 filter, then the mask you'll use for the backward pass will look like: \n",
    "$$ dZ = 1 \\quad \\rightarrow  \\quad dZ =\\begin{bmatrix}\n",
    "1/4 && 1/4 \\\\\n",
    "1/4 && 1/4\n",
    "\\end{bmatrix}\\tag{5}$$\n",
    "\n",
    "This implies that each position in the $dZ$ matrix contributes equally to output because in the forward pass, we took an average. \n",
    "\n",
    "<a name='ex-7'></a>\n",
    "### Exercise 7 - distribute_value\n",
    "\n",
    "Implement the function below to equally distribute a value dz through a matrix of dimension shape. \n",
    "\n",
    "[Hint](https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.ones.html)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "b0a0950ce4306fe20c3345f0108a49bb",
     "grade": false,
     "grade_id": "cell-636557cd1667f01b",
     "locked": false,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "def distribute_value(dz, shape):\n",
    "    \"\"\"\n",
    "    Distributes the input value in the matrix of dimension shape\n",
    "    \n",
    "    Arguments:\n",
    "    dz -- input scalar\n",
    "    shape -- the shape (n_H, n_W) of the output matrix for which we want to distribute the value of dz\n",
    "    \n",
    "    Returns:\n",
    "    a -- Array of size (n_H, n_W) for which we distributed the value of dz\n",
    "    \"\"\"    \n",
    "    # Retrieve dimensions from shape (â‰ˆ1 line)\n",
    "    # (n_H, n_W) = None\n",
    "    \n",
    "    # Compute the value to distribute on the matrix (â‰ˆ1 line)\n",
    "    # average = None\n",
    "    \n",
    "    # Create a matrix where every entry is the \"average\" value (â‰ˆ1 line)\n",
    "    # a = None\n",
    "    # YOUR CODE STARTS HERE\n",
    "    \n",
    "    \n",
    "    # YOUR CODE ENDS HERE\n",
    "    return a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "fe23f96c0d977d6414842a72fa08d64d",
     "grade": true,
     "grade_id": "cell-d34048b69372dc03",
     "locked": true,
     "points": 0,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "a = distribute_value(2, (2, 2))\n",
    "print('distributed value =', a)\n",
    "\n",
    "\n",
    "assert type(a) == np.ndarray, \"Output must be a np.ndarray\"\n",
    "assert a.shape == (2, 2), f\"Wrong shape {a.shape} != (2, 2)\"\n",
    "assert np.sum(a) == 2, \"Values must sum to 2\"\n",
    "\n",
    "a = distribute_value(100, (10, 10))\n",
    "assert type(a) == np.ndarray, \"Output must be a np.ndarray\"\n",
    "assert a.shape == (10, 10), f\"Wrong shape {a.shape} != (10, 10)\"\n",
    "assert np.sum(a) == 100, \"Values must sum to 100\"\n",
    "\n",
    "print(\"\\033[92m All tests passed.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Expected Output**: \n",
    "\n",
    "<table> \n",
    "<tr> \n",
    "<td>\n",
    "distributed_value =\n",
    "</td>\n",
    "<td>\n",
    "[[ 0.5  0.5]\n",
    "<br\\> \n",
    "[ 0.5  0.5]]\n",
    "</td>\n",
    "</tr>\n",
    "</table>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='5-2-3'></a>\n",
    "### 5.2.3 Putting it Together: Pooling Backward \n",
    "\n",
    "You now have everything you need to compute backward propagation on a pooling layer.\n",
    "\n",
    "<a name='ex-8'></a>\n",
    "### Exercise 8 - pool_backward\n",
    "\n",
    "Implement the `pool_backward` function in both modes (`\"max\"` and `\"average\"`). You will once again use 4 for-loops (iterating over training examples, height, width, and channels). You should use an `if/elif` statement to see if the mode is equal to `'max'` or `'average'`. If it is equal to 'average' you should use the `distribute_value()` function you implemented above to create a matrix of the same shape as `a_slice`. Otherwise, the mode is equal to '`max`', and you will create a mask with `create_mask_from_window()` and multiply it by the corresponding value of dA."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "857929f83e0cff037571a794aff714de",
     "grade": false,
     "grade_id": "cell-46629e8e78d1ac80",
     "locked": false,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "def pool_backward(dA, cache, mode = \"max\"):\n",
    "    \"\"\"\n",
    "    Implements the backward pass of the pooling layer\n",
    "    \n",
    "    Arguments:\n",
    "    dA -- gradient of cost with respect to the output of the pooling layer, same shape as A\n",
    "    cache -- cache output from the forward pass of the pooling layer, contains the layer's input and hparameters \n",
    "    mode -- the pooling mode you would like to use, defined as a string (\"max\" or \"average\")\n",
    "    \n",
    "    Returns:\n",
    "    dA_prev -- gradient of cost with respect to the input of the pooling layer, same shape as A_prev\n",
    "    \"\"\"\n",
    "    # Retrieve information from cache (â‰ˆ1 line)\n",
    "    # (A_prev, hparameters) = None\n",
    "    \n",
    "    # Retrieve hyperparameters from \"hparameters\" (â‰ˆ2 lines)\n",
    "    # stride = None\n",
    "    # f = None\n",
    "    \n",
    "    # Retrieve dimensions from A_prev's shape and dA's shape (â‰ˆ2 lines)\n",
    "    # m, n_H_prev, n_W_prev, n_C_prev = None\n",
    "    # m, n_H, n_W, n_C = None\n",
    "    \n",
    "    # Initialize dA_prev with zeros (â‰ˆ1 line)\n",
    "    # dA_prev = None\n",
    "    \n",
    "    # for i in range(None): # loop over the training examples\n",
    "        \n",
    "        # select training example from A_prev (â‰ˆ1 line)\n",
    "        # a_prev = None\n",
    "        \n",
    "        # for h in range(n_H):                   # loop on the vertical axis\n",
    "            # for w in range(n_W):               # loop on the horizontal axis\n",
    "                # for c in range(n_C):           # loop over the channels (depth)\n",
    "        \n",
    "                    # Find the corners of the current \"slice\" (â‰ˆ4 lines)\n",
    "                    # vert_start = None\n",
    "                    # vert_end = None\n",
    "                    # horiz_start = None\n",
    "                    # horiz_end = None\n",
    "                    \n",
    "                    # Compute the backward propagation in both modes.\n",
    "                    # if mode == \"max\":\n",
    "                        \n",
    "                        # Use the corners and \"c\" to define the current slice from a_prev (â‰ˆ1 line)\n",
    "                        # a_prev_slice = None\n",
    "                        \n",
    "                        # Create the mask from a_prev_slice (â‰ˆ1 line)\n",
    "                        # mask = None\n",
    "\n",
    "                        # Set dA_prev to be dA_prev + (the mask multiplied by the correct entry of dA) (â‰ˆ1 line)\n",
    "                        # dA_prev[i, vert_start: vert_end, horiz_start: horiz_end, c] += None\n",
    "                        \n",
    "                    # elif mode == \"average\":\n",
    "                        \n",
    "                        # Get the value da from dA (â‰ˆ1 line)\n",
    "                        # da = None\n",
    "                        \n",
    "                        # Define the shape of the filter as fxf (â‰ˆ1 line)\n",
    "                        # shape = None\n",
    "\n",
    "                        # Distribute it to get the correct slice of dA_prev. i.e. Add the distributed value of da. (â‰ˆ1 line)\n",
    "                        # dA_prev[i, vert_start: vert_end, horiz_start: horiz_end, c] += None\n",
    "    # YOUR CODE STARTS HERE\n",
    "    \n",
    "    \n",
    "    # YOUR CODE ENDS HERE\n",
    "    \n",
    "    # Making sure your output shape is correct\n",
    "    assert(dA_prev.shape == A_prev.shape)\n",
    "    \n",
    "    return dA_prev"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "eeae810027f56d8418e9a89d7feec967",
     "grade": true,
     "grade_id": "cell-bf176d59f19c3cba",
     "locked": true,
     "points": 0,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "np.random.seed(1)\n",
    "A_prev = np.random.randn(5, 5, 3, 2)\n",
    "hparameters = {\"stride\" : 1, \"f\": 2}\n",
    "A, cache = pool_forward(A_prev, hparameters)\n",
    "print(A.shape)\n",
    "print(cache[0].shape)\n",
    "dA = np.random.randn(5, 4, 2, 2)\n",
    "\n",
    "dA_prev1 = pool_backward(dA, cache, mode = \"max\")\n",
    "print(\"mode = max\")\n",
    "print('mean of dA = ', np.mean(dA))\n",
    "print('dA_prev1[1,1] = ', dA_prev1[1, 1])  \n",
    "print()\n",
    "dA_prev2 = pool_backward(dA, cache, mode = \"average\")\n",
    "print(\"mode = average\")\n",
    "print('mean of dA = ', np.mean(dA))\n",
    "print('dA_prev2[1,1] = ', dA_prev2[1, 1]) \n",
    "\n",
    "assert type(dA_prev1) == np.ndarray, \"Wrong type\"\n",
    "assert dA_prev1.shape == (5, 5, 3, 2), f\"Wrong shape {dA_prev1.shape} != (5, 5, 3, 2)\"\n",
    "assert np.allclose(dA_prev1[1, 1], [[0, 0], \n",
    "                                    [ 5.05844394, -1.68282702],\n",
    "                                    [ 0, 0]]), \"Wrong values for mode max\"\n",
    "assert np.allclose(dA_prev2[1, 1], [[0.08485462,  0.2787552], \n",
    "                                    [1.26461098, -0.25749373], \n",
    "                                    [1.17975636, -0.53624893]]), \"Wrong values for mode average\"\n",
    "print(\"\\033[92m All tests passed.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Expected Output**: \n",
    "\n",
    "mode = max:\n",
    "<table> \n",
    "<tr> \n",
    "<td>\n",
    "\n",
    "**mean of dA =**\n",
    "</td>\n",
    "\n",
    "<td>\n",
    "\n",
    "0.145713902729\n",
    "\n",
    "  </td>\n",
    "</tr>\n",
    "\n",
    "<tr> \n",
    "<td>\n",
    "dA_prev[1,1] =\n",
    "</td>\n",
    "<td>\n",
    "[[ 0.          0.        ] <br>\n",
    " [ 5.05844394 -1.68282702] <br>\n",
    " [ 0.          0.        ]]\n",
    "</td>\n",
    "</tr>\n",
    "</table>\n",
    "\n",
    "mode = average\n",
    "<table> \n",
    "<tr> \n",
    "<td>\n",
    "\n",
    "mean of dA =\n",
    "</td>\n",
    "\n",
    "<td>\n",
    "\n",
    "0.145713902729\n",
    "\n",
    "  </td>\n",
    "</tr>\n",
    "\n",
    "<tr> \n",
    "<td>\n",
    "dA_prev[1,1] =\n",
    "</td>\n",
    "<td>\n",
    "[[ 0.08485462  0.2787552 ] <br>\n",
    " [ 1.26461098 -0.25749373] <br>\n",
    " [ 1.17975636 -0.53624893]]\n",
    "</td>\n",
    "</tr>\n",
    "</table>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Congratulations**! You've completed the assignment and its optional portion. You now understand how convolutional neural networks work, and have implemented all the building blocks of a neural network. In the next assignment you will implement a ConvNet using TensorFlow. Nicely done! See you there."
   ]
  }
 ],
 "metadata": {
  "coursera": {
   "course_slug": "convolutional-neural-networks",
   "graded_item_id": "qO8ng",
   "launcher_item_id": "7XDi8"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
